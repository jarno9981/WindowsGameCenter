//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Diagnostics.CodeAnalysis;


namespace GameCenter
{
    public partial class App : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2502")]
        private global::GameCenter.GameCenter_XamlTypeInfo.XamlMetaDataProvider __appProvider;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2502")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::GameCenter.GameCenter_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2502")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2502")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2502")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace GameCenter.GameCenter_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2502")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class XamlMetaDataProvider : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::GameCenter.GameCenter_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::GameCenter.GameCenter_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::GameCenter.GameCenter_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::Windows.Foundation.Metadata.DefaultOverload]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2502")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType) 
            { 
                if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByType(type);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType)
            {
                if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByName(typeName);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlMember xamlMember;
            lock (_xamlMembers)
            {
                if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
                {
                    return xamlMember;
                }
                xamlMember = CreateXamlMember(longMemberName);
                if (xamlMember != null)
                {
                    _xamlMembers.Add(longMemberName, xamlMember);
                }
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;
        
        private void InitTypeTables()
        {
            _typeNameTable = new string[105];
            _typeNameTable[0] = "Microsoft.UI.Xaml.Controls.XamlControlsResources";
            _typeNameTable[1] = "Microsoft.UI.Xaml.ResourceDictionary";
            _typeNameTable[2] = "Object";
            _typeNameTable[3] = "Boolean";
            _typeNameTable[4] = "GameCenter.helper.DateTimeConverter";
            _typeNameTable[5] = "GameCenter.helper.VisibilityConverter";
            _typeNameTable[6] = "Microsoft.UI.Xaml.Controls.Button";
            _typeNameTable[7] = "Microsoft.UI.Xaml.Controls.InfoBar";
            _typeNameTable[8] = "Microsoft.UI.Xaml.Controls.Control";
            _typeNameTable[9] = "Microsoft.UI.Xaml.Controls.InfoBarSeverity";
            _typeNameTable[10] = "System.Enum";
            _typeNameTable[11] = "System.ValueType";
            _typeNameTable[12] = "String";
            _typeNameTable[13] = "Microsoft.UI.Xaml.Controls.Primitives.ButtonBase";
            _typeNameTable[14] = "System.Windows.Input.ICommand";
            _typeNameTable[15] = "Microsoft.UI.Xaml.Style";
            _typeNameTable[16] = "Microsoft.UI.Xaml.DataTemplate";
            _typeNameTable[17] = "Microsoft.UI.Xaml.Controls.IconSource";
            _typeNameTable[18] = "Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings";
            _typeNameTable[19] = "Microsoft.UI.Xaml.DependencyObject";
            _typeNameTable[20] = "Microsoft.UI.Xaml.Controls.ProgressRing";
            _typeNameTable[21] = "Double";
            _typeNameTable[22] = "Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings";
            _typeNameTable[23] = "GameCenter.Helpers.GameDetailsControl";
            _typeNameTable[24] = "Microsoft.UI.Xaml.Controls.UserControl";
            _typeNameTable[25] = "GameCenter.Helpers.Game";
            _typeNameTable[26] = "GameCenter.GamePage";
            _typeNameTable[27] = "Microsoft.UI.Xaml.Controls.Page";
            _typeNameTable[28] = "System.Collections.ObjectModel.ObservableCollection`1<GameCenter.Helpers.Game>";
            _typeNameTable[29] = "System.Collections.ObjectModel.Collection`1<GameCenter.Helpers.Game>";
            _typeNameTable[30] = "Int32";
            _typeNameTable[31] = "UInt32";
            _typeNameTable[32] = "System.DateTime";
            _typeNameTable[33] = "System.Collections.Generic.List`1<String>";
            _typeNameTable[34] = "GameCenter.Helpers.GamePlatform";
            _typeNameTable[35] = "Microsoft.UI.Xaml.Media.Imaging.BitmapImage";
            _typeNameTable[36] = "System.Collections.Generic.List`1<Microsoft.UI.Xaml.Media.Imaging.BitmapImage>";
            _typeNameTable[37] = "System.Collections.ObjectModel.ObservableCollection`1<GameCenter.Helpers.DLC>";
            _typeNameTable[38] = "System.Collections.ObjectModel.Collection`1<GameCenter.Helpers.DLC>";
            _typeNameTable[39] = "GameCenter.Helpers.DLC";
            _typeNameTable[40] = "System.Collections.ObjectModel.ObservableCollection`1<GameCenter.Helpers.Models.GamePath>";
            _typeNameTable[41] = "System.Collections.ObjectModel.Collection`1<GameCenter.Helpers.Models.GamePath>";
            _typeNameTable[42] = "GameCenter.Helpers.Models.GamePath";
            _typeNameTable[43] = "Microsoft.UI.Xaml.Media.MicaBackdrop";
            _typeNameTable[44] = "Microsoft.UI.Xaml.Media.SystemBackdrop";
            _typeNameTable[45] = "Microsoft.UI.Composition.SystemBackdrops.MicaKind";
            _typeNameTable[46] = "GameCenter.Loading";
            _typeNameTable[47] = "Microsoft.UI.Xaml.Window";
            _typeNameTable[48] = "GameCenter.CustomWindow";
            _typeNameTable[49] = "Microsoft.UI.Xaml.Controls.NavigationView";
            _typeNameTable[50] = "Microsoft.UI.Xaml.Controls.ContentControl";
            _typeNameTable[51] = "Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode";
            _typeNameTable[52] = "Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible";
            _typeNameTable[53] = "System.Collections.Generic.IList`1<Object>";
            _typeNameTable[54] = "Microsoft.UI.Xaml.UIElement";
            _typeNameTable[55] = "Microsoft.UI.Xaml.Controls.AutoSuggestBox";
            _typeNameTable[56] = "Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode";
            _typeNameTable[57] = "Microsoft.UI.Xaml.Controls.StyleSelector";
            _typeNameTable[58] = "Microsoft.UI.Xaml.Controls.DataTemplateSelector";
            _typeNameTable[59] = "Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode";
            _typeNameTable[60] = "Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus";
            _typeNameTable[61] = "Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled";
            _typeNameTable[62] = "Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings";
            _typeNameTable[63] = "Microsoft.UI.Xaml.Controls.NavigationViewItem";
            _typeNameTable[64] = "Microsoft.UI.Xaml.Controls.NavigationViewItemBase";
            _typeNameTable[65] = "Microsoft.UI.Xaml.Controls.IconElement";
            _typeNameTable[66] = "Microsoft.UI.Xaml.Controls.InfoBadge";
            _typeNameTable[67] = "Microsoft.UI.Xaml.Controls.PersonPicture";
            _typeNameTable[68] = "Microsoft.UI.Xaml.Media.ImageSource";
            _typeNameTable[69] = "Windows.ApplicationModel.Contacts.Contact";
            _typeNameTable[70] = "Microsoft.UI.Xaml.Controls.PersonPictureTemplateSettings";
            _typeNameTable[71] = "GameCenter.MainWindow";
            _typeNameTable[72] = "GameCenter.Pages.Friends";
            _typeNameTable[73] = "System.Collections.ObjectModel.ObservableCollection`1<GameCenter.Helpers.Friend>";
            _typeNameTable[74] = "System.Collections.ObjectModel.Collection`1<GameCenter.Helpers.Friend>";
            _typeNameTable[75] = "GameCenter.Helpers.Friend";
            _typeNameTable[76] = "Microsoft.UI.Xaml.Media.SolidColorBrush";
            _typeNameTable[77] = "GameCenter.Pages.GameCenterSetup";
            _typeNameTable[78] = "GameCenter.Pages.InstallerProgressWindow";
            _typeNameTable[79] = "Microsoft.UI.Xaml.Controls.ItemsRepeater";
            _typeNameTable[80] = "Microsoft.UI.Xaml.FrameworkElement";
            _typeNameTable[81] = "Microsoft.UI.Xaml.Controls.Layout";
            _typeNameTable[82] = "Microsoft.UI.Xaml.Media.Brush";
            _typeNameTable[83] = "Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider";
            _typeNameTable[84] = "Microsoft.UI.Xaml.Controls.ItemsSourceView";
            _typeNameTable[85] = "Microsoft.UI.Xaml.Controls.ProgressBar";
            _typeNameTable[86] = "Microsoft.UI.Xaml.Controls.Primitives.RangeBase";
            _typeNameTable[87] = "Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings";
            _typeNameTable[88] = "GameCenter.Pages.LauncherInfo";
            _typeNameTable[89] = "Microsoft.UI.Xaml.Visibility";
            _typeNameTable[90] = "Microsoft.UI.Xaml.Controls.UniformGridLayout";
            _typeNameTable[91] = "Microsoft.UI.Xaml.Controls.VirtualizingLayout";
            _typeNameTable[92] = "Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch";
            _typeNameTable[93] = "Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification";
            _typeNameTable[94] = "Microsoft.UI.Xaml.Controls.Orientation";
            _typeNameTable[95] = "Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation";
            _typeNameTable[96] = "GameCenter.Pages.PlatformInstaller";
            _typeNameTable[97] = "System.Collections.ObjectModel.ObservableCollection`1<GameCenter.Pages.LauncherInfo>";
            _typeNameTable[98] = "System.Collections.ObjectModel.Collection`1<GameCenter.Pages.LauncherInfo>";
            _typeNameTable[99] = "Microsoft.UI.Xaml.Controls.Expander";
            _typeNameTable[100] = "Microsoft.UI.Xaml.Controls.ExpandDirection";
            _typeNameTable[101] = "Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings";
            _typeNameTable[102] = "GameCenter.Pages.Settings";
            _typeNameTable[103] = "Microsoft.UI.Xaml.Controls.TreeViewNode";
            _typeNameTable[104] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>";

            _typeTable = new global::System.Type[105];
            _typeTable[0] = typeof(global::Microsoft.UI.Xaml.Controls.XamlControlsResources);
            _typeTable[1] = typeof(global::Microsoft.UI.Xaml.ResourceDictionary);
            _typeTable[2] = typeof(global::System.Object);
            _typeTable[3] = typeof(global::System.Boolean);
            _typeTable[4] = typeof(global::GameCenter.helper.DateTimeConverter);
            _typeTable[5] = typeof(global::GameCenter.helper.VisibilityConverter);
            _typeTable[6] = typeof(global::Microsoft.UI.Xaml.Controls.Button);
            _typeTable[7] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBar);
            _typeTable[8] = typeof(global::Microsoft.UI.Xaml.Controls.Control);
            _typeTable[9] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBarSeverity);
            _typeTable[10] = typeof(global::System.Enum);
            _typeTable[11] = typeof(global::System.ValueType);
            _typeTable[12] = typeof(global::System.String);
            _typeTable[13] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase);
            _typeTable[14] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[15] = typeof(global::Microsoft.UI.Xaml.Style);
            _typeTable[16] = typeof(global::Microsoft.UI.Xaml.DataTemplate);
            _typeTable[17] = typeof(global::Microsoft.UI.Xaml.Controls.IconSource);
            _typeTable[18] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings);
            _typeTable[19] = typeof(global::Microsoft.UI.Xaml.DependencyObject);
            _typeTable[20] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressRing);
            _typeTable[21] = typeof(global::System.Double);
            _typeTable[22] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings);
            _typeTable[23] = typeof(global::GameCenter.Helpers.GameDetailsControl);
            _typeTable[24] = typeof(global::Microsoft.UI.Xaml.Controls.UserControl);
            _typeTable[25] = typeof(global::GameCenter.Helpers.Game);
            _typeTable[26] = typeof(global::GameCenter.GamePage);
            _typeTable[27] = typeof(global::Microsoft.UI.Xaml.Controls.Page);
            _typeTable[28] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::GameCenter.Helpers.Game>);
            _typeTable[29] = typeof(global::System.Collections.ObjectModel.Collection<global::GameCenter.Helpers.Game>);
            _typeTable[30] = typeof(global::System.Int32);
            _typeTable[31] = typeof(global::System.UInt32);
            _typeTable[32] = typeof(global::System.DateTime);
            _typeTable[33] = typeof(global::System.Collections.Generic.List<global::System.String>);
            _typeTable[34] = typeof(global::GameCenter.Helpers.GamePlatform);
            _typeTable[35] = typeof(global::Microsoft.UI.Xaml.Media.Imaging.BitmapImage);
            _typeTable[36] = typeof(global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Media.Imaging.BitmapImage>);
            _typeTable[37] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::GameCenter.Helpers.DLC>);
            _typeTable[38] = typeof(global::System.Collections.ObjectModel.Collection<global::GameCenter.Helpers.DLC>);
            _typeTable[39] = typeof(global::GameCenter.Helpers.DLC);
            _typeTable[40] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::GameCenter.Helpers.Models.GamePath>);
            _typeTable[41] = typeof(global::System.Collections.ObjectModel.Collection<global::GameCenter.Helpers.Models.GamePath>);
            _typeTable[42] = typeof(global::GameCenter.Helpers.Models.GamePath);
            _typeTable[43] = typeof(global::Microsoft.UI.Xaml.Media.MicaBackdrop);
            _typeTable[44] = typeof(global::Microsoft.UI.Xaml.Media.SystemBackdrop);
            _typeTable[45] = typeof(global::Microsoft.UI.Composition.SystemBackdrops.MicaKind);
            _typeTable[46] = typeof(global::GameCenter.Loading);
            _typeTable[47] = typeof(global::Microsoft.UI.Xaml.Window);
            _typeTable[48] = typeof(global::GameCenter.CustomWindow);
            _typeTable[49] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationView);
            _typeTable[50] = typeof(global::Microsoft.UI.Xaml.Controls.ContentControl);
            _typeTable[51] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode);
            _typeTable[52] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible);
            _typeTable[53] = typeof(global::System.Collections.Generic.IList<global::System.Object>);
            _typeTable[54] = typeof(global::Microsoft.UI.Xaml.UIElement);
            _typeTable[55] = typeof(global::Microsoft.UI.Xaml.Controls.AutoSuggestBox);
            _typeTable[56] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode);
            _typeTable[57] = typeof(global::Microsoft.UI.Xaml.Controls.StyleSelector);
            _typeTable[58] = typeof(global::Microsoft.UI.Xaml.Controls.DataTemplateSelector);
            _typeTable[59] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode);
            _typeTable[60] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus);
            _typeTable[61] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled);
            _typeTable[62] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings);
            _typeTable[63] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItem);
            _typeTable[64] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase);
            _typeTable[65] = typeof(global::Microsoft.UI.Xaml.Controls.IconElement);
            _typeTable[66] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBadge);
            _typeTable[67] = typeof(global::Microsoft.UI.Xaml.Controls.PersonPicture);
            _typeTable[68] = typeof(global::Microsoft.UI.Xaml.Media.ImageSource);
            _typeTable[69] = typeof(global::Windows.ApplicationModel.Contacts.Contact);
            _typeTable[70] = typeof(global::Microsoft.UI.Xaml.Controls.PersonPictureTemplateSettings);
            _typeTable[71] = typeof(global::GameCenter.MainWindow);
            _typeTable[72] = typeof(global::GameCenter.Pages.Friends);
            _typeTable[73] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::GameCenter.Helpers.Friend>);
            _typeTable[74] = typeof(global::System.Collections.ObjectModel.Collection<global::GameCenter.Helpers.Friend>);
            _typeTable[75] = typeof(global::GameCenter.Helpers.Friend);
            _typeTable[76] = typeof(global::Microsoft.UI.Xaml.Media.SolidColorBrush);
            _typeTable[77] = typeof(global::GameCenter.Pages.GameCenterSetup);
            _typeTable[78] = typeof(global::GameCenter.Pages.InstallerProgressWindow);
            _typeTable[79] = typeof(global::Microsoft.UI.Xaml.Controls.ItemsRepeater);
            _typeTable[80] = typeof(global::Microsoft.UI.Xaml.FrameworkElement);
            _typeTable[81] = typeof(global::Microsoft.UI.Xaml.Controls.Layout);
            _typeTable[82] = typeof(global::Microsoft.UI.Xaml.Media.Brush);
            _typeTable[83] = typeof(global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider);
            _typeTable[84] = typeof(global::Microsoft.UI.Xaml.Controls.ItemsSourceView);
            _typeTable[85] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressBar);
            _typeTable[86] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase);
            _typeTable[87] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings);
            _typeTable[88] = typeof(global::GameCenter.Pages.LauncherInfo);
            _typeTable[89] = typeof(global::Microsoft.UI.Xaml.Visibility);
            _typeTable[90] = typeof(global::Microsoft.UI.Xaml.Controls.UniformGridLayout);
            _typeTable[91] = typeof(global::Microsoft.UI.Xaml.Controls.VirtualizingLayout);
            _typeTable[92] = typeof(global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch);
            _typeTable[93] = typeof(global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification);
            _typeTable[94] = typeof(global::Microsoft.UI.Xaml.Controls.Orientation);
            _typeTable[95] = typeof(global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation);
            _typeTable[96] = typeof(global::GameCenter.Pages.PlatformInstaller);
            _typeTable[97] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::GameCenter.Pages.LauncherInfo>);
            _typeTable[98] = typeof(global::System.Collections.ObjectModel.Collection<global::GameCenter.Pages.LauncherInfo>);
            _typeTable[99] = typeof(global::Microsoft.UI.Xaml.Controls.Expander);
            _typeTable[100] = typeof(global::Microsoft.UI.Xaml.Controls.ExpandDirection);
            _typeTable[101] = typeof(global::Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings);
            _typeTable[102] = typeof(global::GameCenter.Pages.Settings);
            _typeTable[103] = typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode);
            _typeTable[104] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_XamlControlsResources() { return new global::Microsoft.UI.Xaml.Controls.XamlControlsResources(); }
        private object Activate_4_DateTimeConverter() { return new global::GameCenter.helper.DateTimeConverter(); }
        private object Activate_5_VisibilityConverter() { return new global::GameCenter.helper.VisibilityConverter(); }
        private object Activate_7_InfoBar() { return new global::Microsoft.UI.Xaml.Controls.InfoBar(); }
        private object Activate_18_InfoBarTemplateSettings() { return new global::Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings(); }
        private object Activate_20_ProgressRing() { return new global::Microsoft.UI.Xaml.Controls.ProgressRing(); }
        private object Activate_23_GameDetailsControl() { return new global::GameCenter.Helpers.GameDetailsControl(); }
        private object Activate_25_Game() { return new global::GameCenter.Helpers.Game(); }
        private object Activate_26_GamePage() { return new global::GameCenter.GamePage(); }
        private object Activate_28_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::GameCenter.Helpers.Game>(); }
        private object Activate_29_Collection() { return new global::System.Collections.ObjectModel.Collection<global::GameCenter.Helpers.Game>(); }
        private object Activate_33_List() { return new global::System.Collections.Generic.List<global::System.String>(); }
        private object Activate_36_List() { return new global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Media.Imaging.BitmapImage>(); }
        private object Activate_37_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::GameCenter.Helpers.DLC>(); }
        private object Activate_38_Collection() { return new global::System.Collections.ObjectModel.Collection<global::GameCenter.Helpers.DLC>(); }
        private object Activate_39_DLC() { return new global::GameCenter.Helpers.DLC(); }
        private object Activate_40_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::GameCenter.Helpers.Models.GamePath>(); }
        private object Activate_41_Collection() { return new global::System.Collections.ObjectModel.Collection<global::GameCenter.Helpers.Models.GamePath>(); }
        private object Activate_42_GamePath() { return new global::GameCenter.Helpers.Models.GamePath(); }
        private object Activate_43_MicaBackdrop() { return new global::Microsoft.UI.Xaml.Media.MicaBackdrop(); }
        private object Activate_46_Loading() { return new global::GameCenter.Loading(); }
        private object Activate_48_CustomWindow() { return new global::GameCenter.CustomWindow(); }
        private object Activate_49_NavigationView() { return new global::Microsoft.UI.Xaml.Controls.NavigationView(); }
        private object Activate_62_NavigationViewTemplateSettings() { return new global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings(); }
        private object Activate_63_NavigationViewItem() { return new global::Microsoft.UI.Xaml.Controls.NavigationViewItem(); }
        private object Activate_66_InfoBadge() { return new global::Microsoft.UI.Xaml.Controls.InfoBadge(); }
        private object Activate_67_PersonPicture() { return new global::Microsoft.UI.Xaml.Controls.PersonPicture(); }
        private object Activate_69_Contact() { return new global::Windows.ApplicationModel.Contacts.Contact(); }
        private object Activate_71_MainWindow() { return new global::GameCenter.MainWindow(); }
        private object Activate_72_Friends() { return new global::GameCenter.Pages.Friends(); }
        private object Activate_73_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::GameCenter.Helpers.Friend>(); }
        private object Activate_74_Collection() { return new global::System.Collections.ObjectModel.Collection<global::GameCenter.Helpers.Friend>(); }
        private object Activate_75_Friend() { return new global::GameCenter.Helpers.Friend(); }
        private object Activate_77_GameCenterSetup() { return new global::GameCenter.Pages.GameCenterSetup(); }
        private object Activate_78_InstallerProgressWindow() { return new global::GameCenter.Pages.InstallerProgressWindow(); }
        private object Activate_79_ItemsRepeater() { return new global::Microsoft.UI.Xaml.Controls.ItemsRepeater(); }
        private object Activate_83_ItemCollectionTransitionProvider() { return new global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider(); }
        private object Activate_85_ProgressBar() { return new global::Microsoft.UI.Xaml.Controls.ProgressBar(); }
        private object Activate_88_LauncherInfo() { return new global::GameCenter.Pages.LauncherInfo(); }
        private object Activate_90_UniformGridLayout() { return new global::Microsoft.UI.Xaml.Controls.UniformGridLayout(); }
        private object Activate_91_VirtualizingLayout() { return new global::Microsoft.UI.Xaml.Controls.VirtualizingLayout(); }
        private object Activate_96_PlatformInstaller() { return new global::GameCenter.Pages.PlatformInstaller(); }
        private object Activate_97_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::GameCenter.Pages.LauncherInfo>(); }
        private object Activate_98_Collection() { return new global::System.Collections.ObjectModel.Collection<global::GameCenter.Pages.LauncherInfo>(); }
        private object Activate_99_Expander() { return new global::Microsoft.UI.Xaml.Controls.Expander(); }
        private object Activate_102_Settings() { return new global::GameCenter.Pages.Settings(); }
        private object Activate_103_TreeViewNode() { return new global::Microsoft.UI.Xaml.Controls.TreeViewNode(); }
        private void StaticInitializer_0_XamlControlsResources() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.XamlControlsResources).TypeHandle);
        private void StaticInitializer_4_DateTimeConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::GameCenter.helper.DateTimeConverter).TypeHandle);
        private void StaticInitializer_5_VisibilityConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::GameCenter.helper.VisibilityConverter).TypeHandle);
        private void StaticInitializer_7_InfoBar() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.InfoBar).TypeHandle);
        private void StaticInitializer_9_InfoBarSeverity() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.InfoBarSeverity).TypeHandle);
        private void StaticInitializer_10_Enum() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Enum).TypeHandle);
        private void StaticInitializer_11_ValueType() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.ValueType).TypeHandle);
        private void StaticInitializer_14_ICommand() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Windows.Input.ICommand).TypeHandle);
        private void StaticInitializer_18_InfoBarTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings).TypeHandle);
        private void StaticInitializer_20_ProgressRing() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ProgressRing).TypeHandle);
        private void StaticInitializer_22_ProgressRingTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings).TypeHandle);
        private void StaticInitializer_23_GameDetailsControl() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::GameCenter.Helpers.GameDetailsControl).TypeHandle);
        private void StaticInitializer_25_Game() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::GameCenter.Helpers.Game).TypeHandle);
        private void StaticInitializer_26_GamePage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::GameCenter.GamePage).TypeHandle);
        private void StaticInitializer_28_ObservableCollection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::GameCenter.Helpers.Game>).TypeHandle);
        private void StaticInitializer_29_Collection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.Collection<global::GameCenter.Helpers.Game>).TypeHandle);
        private void StaticInitializer_32_DateTime() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.DateTime).TypeHandle);
        private void StaticInitializer_33_List() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.List<global::System.String>).TypeHandle);
        private void StaticInitializer_34_GamePlatform() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::GameCenter.Helpers.GamePlatform).TypeHandle);
        private void StaticInitializer_36_List() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Media.Imaging.BitmapImage>).TypeHandle);
        private void StaticInitializer_37_ObservableCollection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::GameCenter.Helpers.DLC>).TypeHandle);
        private void StaticInitializer_38_Collection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.Collection<global::GameCenter.Helpers.DLC>).TypeHandle);
        private void StaticInitializer_39_DLC() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::GameCenter.Helpers.DLC).TypeHandle);
        private void StaticInitializer_40_ObservableCollection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::GameCenter.Helpers.Models.GamePath>).TypeHandle);
        private void StaticInitializer_41_Collection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.Collection<global::GameCenter.Helpers.Models.GamePath>).TypeHandle);
        private void StaticInitializer_42_GamePath() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::GameCenter.Helpers.Models.GamePath).TypeHandle);
        private void StaticInitializer_43_MicaBackdrop() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Media.MicaBackdrop).TypeHandle);
        private void StaticInitializer_45_MicaKind() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Composition.SystemBackdrops.MicaKind).TypeHandle);
        private void StaticInitializer_46_Loading() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::GameCenter.Loading).TypeHandle);
        private void StaticInitializer_48_CustomWindow() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::GameCenter.CustomWindow).TypeHandle);
        private void StaticInitializer_49_NavigationView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationView).TypeHandle);
        private void StaticInitializer_51_NavigationViewPaneDisplayMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode).TypeHandle);
        private void StaticInitializer_52_NavigationViewBackButtonVisible() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible).TypeHandle);
        private void StaticInitializer_53_IList() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IList<global::System.Object>).TypeHandle);
        private void StaticInitializer_56_NavigationViewDisplayMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode).TypeHandle);
        private void StaticInitializer_59_NavigationViewOverflowLabelMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode).TypeHandle);
        private void StaticInitializer_60_NavigationViewSelectionFollowsFocus() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus).TypeHandle);
        private void StaticInitializer_61_NavigationViewShoulderNavigationEnabled() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled).TypeHandle);
        private void StaticInitializer_62_NavigationViewTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings).TypeHandle);
        private void StaticInitializer_63_NavigationViewItem() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItem).TypeHandle);
        private void StaticInitializer_64_NavigationViewItemBase() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase).TypeHandle);
        private void StaticInitializer_66_InfoBadge() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.InfoBadge).TypeHandle);
        private void StaticInitializer_67_PersonPicture() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.PersonPicture).TypeHandle);
        private void StaticInitializer_69_Contact() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Windows.ApplicationModel.Contacts.Contact).TypeHandle);
        private void StaticInitializer_70_PersonPictureTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.PersonPictureTemplateSettings).TypeHandle);
        private void StaticInitializer_71_MainWindow() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::GameCenter.MainWindow).TypeHandle);
        private void StaticInitializer_72_Friends() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::GameCenter.Pages.Friends).TypeHandle);
        private void StaticInitializer_73_ObservableCollection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::GameCenter.Helpers.Friend>).TypeHandle);
        private void StaticInitializer_74_Collection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.Collection<global::GameCenter.Helpers.Friend>).TypeHandle);
        private void StaticInitializer_75_Friend() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::GameCenter.Helpers.Friend).TypeHandle);
        private void StaticInitializer_77_GameCenterSetup() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::GameCenter.Pages.GameCenterSetup).TypeHandle);
        private void StaticInitializer_78_InstallerProgressWindow() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::GameCenter.Pages.InstallerProgressWindow).TypeHandle);
        private void StaticInitializer_79_ItemsRepeater() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ItemsRepeater).TypeHandle);
        private void StaticInitializer_81_Layout() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.Layout).TypeHandle);
        private void StaticInitializer_83_ItemCollectionTransitionProvider() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider).TypeHandle);
        private void StaticInitializer_84_ItemsSourceView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ItemsSourceView).TypeHandle);
        private void StaticInitializer_85_ProgressBar() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ProgressBar).TypeHandle);
        private void StaticInitializer_87_ProgressBarTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings).TypeHandle);
        private void StaticInitializer_88_LauncherInfo() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::GameCenter.Pages.LauncherInfo).TypeHandle);
        private void StaticInitializer_90_UniformGridLayout() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.UniformGridLayout).TypeHandle);
        private void StaticInitializer_91_VirtualizingLayout() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.VirtualizingLayout).TypeHandle);
        private void StaticInitializer_92_UniformGridLayoutItemsStretch() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch).TypeHandle);
        private void StaticInitializer_93_UniformGridLayoutItemsJustification() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification).TypeHandle);
        private void StaticInitializer_95_IndexBasedLayoutOrientation() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation).TypeHandle);
        private void StaticInitializer_96_PlatformInstaller() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::GameCenter.Pages.PlatformInstaller).TypeHandle);
        private void StaticInitializer_97_ObservableCollection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::GameCenter.Pages.LauncherInfo>).TypeHandle);
        private void StaticInitializer_98_Collection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.Collection<global::GameCenter.Pages.LauncherInfo>).TypeHandle);
        private void StaticInitializer_99_Expander() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.Expander).TypeHandle);
        private void StaticInitializer_100_ExpandDirection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ExpandDirection).TypeHandle);
        private void StaticInitializer_101_ExpanderTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings).TypeHandle);
        private void StaticInitializer_102_Settings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::GameCenter.Pages.Settings).TypeHandle);
        private void StaticInitializer_103_TreeViewNode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode).TypeHandle);
        private void StaticInitializer_104_IList() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>).TypeHandle);
        private void MapAdd_0_XamlControlsResources(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.Object, global::System.Object>)instance;
            var newKey = (global::System.Object)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_28_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::GameCenter.Helpers.Game>)instance;
            var newItem = (global::GameCenter.Helpers.Game)item;
            collection.Add(newItem);
        }
        private void VectorAdd_29_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::GameCenter.Helpers.Game>)instance;
            var newItem = (global::GameCenter.Helpers.Game)item;
            collection.Add(newItem);
        }
        private void VectorAdd_33_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.String>)instance;
            var newItem = (global::System.String)item;
            collection.Add(newItem);
        }
        private void VectorAdd_36_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Media.Imaging.BitmapImage>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Media.Imaging.BitmapImage)item;
            collection.Add(newItem);
        }
        private void VectorAdd_37_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::GameCenter.Helpers.DLC>)instance;
            var newItem = (global::GameCenter.Helpers.DLC)item;
            collection.Add(newItem);
        }
        private void VectorAdd_38_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::GameCenter.Helpers.DLC>)instance;
            var newItem = (global::GameCenter.Helpers.DLC)item;
            collection.Add(newItem);
        }
        private void VectorAdd_40_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::GameCenter.Helpers.Models.GamePath>)instance;
            var newItem = (global::GameCenter.Helpers.Models.GamePath)item;
            collection.Add(newItem);
        }
        private void VectorAdd_41_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::GameCenter.Helpers.Models.GamePath>)instance;
            var newItem = (global::GameCenter.Helpers.Models.GamePath)item;
            collection.Add(newItem);
        }
        private void VectorAdd_53_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_73_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::GameCenter.Helpers.Friend>)instance;
            var newItem = (global::GameCenter.Helpers.Friend)item;
            collection.Add(newItem);
        }
        private void VectorAdd_74_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::GameCenter.Helpers.Friend>)instance;
            var newItem = (global::GameCenter.Helpers.Friend)item;
            collection.Add(newItem);
        }
        private void VectorAdd_97_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::GameCenter.Pages.LauncherInfo>)instance;
            var newItem = (global::GameCenter.Pages.LauncherInfo)item;
            collection.Add(newItem);
        }
        private void VectorAdd_98_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::GameCenter.Pages.LauncherInfo>)instance;
            var newItem = (global::GameCenter.Pages.LauncherInfo)item;
            collection.Add(newItem);
        }
        private void VectorAdd_104_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.TreeViewNode>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)item;
            collection.Add(newItem);
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Microsoft.UI.Xaml.Controls.XamlControlsResources
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.ResourceDictionary"));
                userType.Activator = Activate_0_XamlControlsResources;
                userType.StaticInitializer = StaticInitializer_0_XamlControlsResources;
                userType.DictionaryAdd = MapAdd_0_XamlControlsResources;
                userType.AddMemberName("UseCompactResources");
                xamlType = userType;
                break;

            case 1:   //  Microsoft.UI.Xaml.ResourceDictionary
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Object
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Boolean
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  GameCenter.helper.DateTimeConverter
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_4_DateTimeConverter;
                userType.StaticInitializer = StaticInitializer_4_DateTimeConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 5:   //  GameCenter.helper.VisibilityConverter
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_5_VisibilityConverter;
                userType.StaticInitializer = StaticInitializer_5_VisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 6:   //  Microsoft.UI.Xaml.Controls.Button
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  Microsoft.UI.Xaml.Controls.InfoBar
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_7_InfoBar;
                userType.StaticInitializer = StaticInitializer_7_InfoBar;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.InfoBar.Content");
                userType.AddMemberName("Content");
                userType.AddMemberName("IsOpen");
                userType.AddMemberName("Severity");
                userType.AddMemberName("Title");
                userType.AddMemberName("IsClosable");
                userType.AddMemberName("Message");
                userType.AddMemberName("ActionButton");
                userType.AddMemberName("CloseButtonCommand");
                userType.AddMemberName("CloseButtonCommandParameter");
                userType.AddMemberName("CloseButtonStyle");
                userType.AddMemberName("ContentTemplate");
                userType.AddMemberName("IconSource");
                userType.AddMemberName("IsIconVisible");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 8:   //  Microsoft.UI.Xaml.Controls.Control
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  Microsoft.UI.Xaml.Controls.InfoBarSeverity
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_9_InfoBarSeverity;
                userType.AddEnumValue("Informational", global::Microsoft.UI.Xaml.Controls.InfoBarSeverity.Informational);
                userType.AddEnumValue("Success", global::Microsoft.UI.Xaml.Controls.InfoBarSeverity.Success);
                userType.AddEnumValue("Warning", global::Microsoft.UI.Xaml.Controls.InfoBarSeverity.Warning);
                userType.AddEnumValue("Error", global::Microsoft.UI.Xaml.Controls.InfoBarSeverity.Error);
                xamlType = userType;
                break;

            case 10:   //  System.Enum
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_10_Enum;
                xamlType = userType;
                break;

            case 11:   //  System.ValueType
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_11_ValueType;
                xamlType = userType;
                break;

            case 12:   //  String
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 13:   //  Microsoft.UI.Xaml.Controls.Primitives.ButtonBase
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 14:   //  System.Windows.Input.ICommand
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_14_ICommand;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 15:   //  Microsoft.UI.Xaml.Style
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  Microsoft.UI.Xaml.DataTemplate
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 17:   //  Microsoft.UI.Xaml.Controls.IconSource
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 18:   //  Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_18_InfoBarTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 19:   //  Microsoft.UI.Xaml.DependencyObject
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  Microsoft.UI.Xaml.Controls.ProgressRing
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_20_ProgressRing;
                userType.StaticInitializer = StaticInitializer_20_ProgressRing;
                userType.AddMemberName("IsActive");
                userType.AddMemberName("IsIndeterminate");
                userType.AddMemberName("Maximum");
                userType.AddMemberName("Minimum");
                userType.AddMemberName("TemplateSettings");
                userType.AddMemberName("Value");
                xamlType = userType;
                break;

            case 21:   //  Double
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 22:   //  Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_22_ProgressRingTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 23:   //  GameCenter.Helpers.GameDetailsControl
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_23_GameDetailsControl;
                userType.StaticInitializer = StaticInitializer_23_GameDetailsControl;
                userType.AddMemberName("Game");
                xamlType = userType;
                break;

            case 24:   //  Microsoft.UI.Xaml.Controls.UserControl
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 25:   //  GameCenter.Helpers.Game
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_25_Game;
                userType.StaticInitializer = StaticInitializer_25_Game;
                userType.AddMemberName("Id");
                userType.AddMemberName("GameId");
                userType.AddMemberName("AppId");
                userType.AddMemberName("PlaytimeForever");
                userType.AddMemberName("Name");
                userType.AddMemberName("Title");
                userType.AddMemberName("Description");
                userType.AddMemberName("ImageUrl");
                userType.AddMemberName("LaunchUri");
                userType.AddMemberName("Launcher");
                userType.AddMemberName("LastPlayed");
                userType.AddMemberName("Screenshots");
                userType.AddMemberName("ExecutablePath");
                userType.AddMemberName("InstallPath");
                userType.AddMemberName("InstallLocation");
                userType.AddMemberName("Version");
                userType.AddMemberName("Publisher");
                userType.AddMemberName("Developer");
                userType.AddMemberName("ReleaseDate");
                userType.AddMemberName("Genre");
                userType.AddMemberName("PlayTime");
                userType.AddMemberName("Platform");
                userType.AddMemberName("ImageSource");
                userType.AddMemberName("ScreenshotSources");
                userType.AddMemberName("AvailableDLC");
                xamlType = userType;
                break;

            case 26:   //  GameCenter.GamePage
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_26_GamePage;
                userType.StaticInitializer = StaticInitializer_26_GamePage;
                userType.AddMemberName("SteamGames");
                userType.AddMemberName("XboxGames");
                userType.AddMemberName("EpicGames");
                userType.AddMemberName("OtherGames");
                userType.AddMemberName("CustomPaths");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 27:   //  Microsoft.UI.Xaml.Controls.Page
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 28:   //  System.Collections.ObjectModel.ObservableCollection`1<GameCenter.Helpers.Game>
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<GameCenter.Helpers.Game>"));
                userType.StaticInitializer = StaticInitializer_28_ObservableCollection;
                userType.CollectionAdd = VectorAdd_28_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 29:   //  System.Collections.ObjectModel.Collection`1<GameCenter.Helpers.Game>
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_29_Collection;
                userType.StaticInitializer = StaticInitializer_29_Collection;
                userType.CollectionAdd = VectorAdd_29_Collection;
                xamlType = userType;
                break;

            case 30:   //  Int32
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 31:   //  UInt32
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 32:   //  System.DateTime
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_32_DateTime;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 33:   //  System.Collections.Generic.List`1<String>
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_33_List;
                userType.CollectionAdd = VectorAdd_33_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 34:   //  GameCenter.Helpers.GamePlatform
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_34_GamePlatform;
                userType.AddEnumValue("Steam", global::GameCenter.Helpers.GamePlatform.Steam);
                userType.AddEnumValue("Xbox", global::GameCenter.Helpers.GamePlatform.Xbox);
                userType.AddEnumValue("Epic", global::GameCenter.Helpers.GamePlatform.Epic);
                userType.AddEnumValue("Other", global::GameCenter.Helpers.GamePlatform.Other);
                xamlType = userType;
                break;

            case 35:   //  Microsoft.UI.Xaml.Media.Imaging.BitmapImage
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 36:   //  System.Collections.Generic.List`1<Microsoft.UI.Xaml.Media.Imaging.BitmapImage>
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_36_List;
                userType.CollectionAdd = VectorAdd_36_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 37:   //  System.Collections.ObjectModel.ObservableCollection`1<GameCenter.Helpers.DLC>
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<GameCenter.Helpers.DLC>"));
                userType.StaticInitializer = StaticInitializer_37_ObservableCollection;
                userType.CollectionAdd = VectorAdd_37_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 38:   //  System.Collections.ObjectModel.Collection`1<GameCenter.Helpers.DLC>
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_38_Collection;
                userType.StaticInitializer = StaticInitializer_38_Collection;
                userType.CollectionAdd = VectorAdd_38_Collection;
                xamlType = userType;
                break;

            case 39:   //  GameCenter.Helpers.DLC
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_39_DLC;
                userType.StaticInitializer = StaticInitializer_39_DLC;
                userType.AddMemberName("Id");
                userType.AddMemberName("GameId");
                userType.AddMemberName("Title");
                userType.AddMemberName("ImageUrl");
                userType.AddMemberName("Price");
                xamlType = userType;
                break;

            case 40:   //  System.Collections.ObjectModel.ObservableCollection`1<GameCenter.Helpers.Models.GamePath>
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<GameCenter.Helpers.Models.GamePath>"));
                userType.StaticInitializer = StaticInitializer_40_ObservableCollection;
                userType.CollectionAdd = VectorAdd_40_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 41:   //  System.Collections.ObjectModel.Collection`1<GameCenter.Helpers.Models.GamePath>
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_41_Collection;
                userType.StaticInitializer = StaticInitializer_41_Collection;
                userType.CollectionAdd = VectorAdd_41_Collection;
                xamlType = userType;
                break;

            case 42:   //  GameCenter.Helpers.Models.GamePath
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_42_GamePath;
                userType.StaticInitializer = StaticInitializer_42_GamePath;
                userType.AddMemberName("Id");
                userType.AddMemberName("Path");
                userType.AddMemberName("Name");
                userType.AddMemberName("LauncherType");
                userType.AddMemberName("DateAdded");
                userType.AddMemberName("IsActive");
                xamlType = userType;
                break;

            case 43:   //  Microsoft.UI.Xaml.Media.MicaBackdrop
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Media.SystemBackdrop"));
                userType.Activator = Activate_43_MicaBackdrop;
                userType.StaticInitializer = StaticInitializer_43_MicaBackdrop;
                userType.AddMemberName("Kind");
                xamlType = userType;
                break;

            case 44:   //  Microsoft.UI.Xaml.Media.SystemBackdrop
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 45:   //  Microsoft.UI.Composition.SystemBackdrops.MicaKind
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_45_MicaKind;
                userType.AddEnumValue("Base", global::Microsoft.UI.Composition.SystemBackdrops.MicaKind.Base);
                userType.AddEnumValue("BaseAlt", global::Microsoft.UI.Composition.SystemBackdrops.MicaKind.BaseAlt);
                xamlType = userType;
                break;

            case 46:   //  GameCenter.Loading
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Window"));
                userType.Activator = Activate_46_Loading;
                userType.StaticInitializer = StaticInitializer_46_Loading;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 47:   //  Microsoft.UI.Xaml.Window
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 48:   //  GameCenter.CustomWindow
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Window"));
                userType.Activator = Activate_48_CustomWindow;
                userType.StaticInitializer = StaticInitializer_48_CustomWindow;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 49:   //  Microsoft.UI.Xaml.Controls.NavigationView
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_49_NavigationView;
                userType.StaticInitializer = StaticInitializer_49_NavigationView;
                userType.AddMemberName("PaneDisplayMode");
                userType.AddMemberName("IsSettingsVisible");
                userType.AddMemberName("IsBackButtonVisible");
                userType.AddMemberName("OpenPaneLength");
                userType.AddMemberName("CompactPaneLength");
                userType.AddMemberName("IsPaneToggleButtonVisible");
                userType.AddMemberName("MenuItems");
                userType.AddMemberName("PaneFooter");
                userType.AddMemberName("AlwaysShowHeader");
                userType.AddMemberName("AutoSuggestBox");
                userType.AddMemberName("CompactModeThresholdWidth");
                userType.AddMemberName("ContentOverlay");
                userType.AddMemberName("DisplayMode");
                userType.AddMemberName("ExpandedModeThresholdWidth");
                userType.AddMemberName("FooterMenuItems");
                userType.AddMemberName("FooterMenuItemsSource");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("IsBackEnabled");
                userType.AddMemberName("IsPaneOpen");
                userType.AddMemberName("IsPaneVisible");
                userType.AddMemberName("IsTitleBarAutoPaddingEnabled");
                userType.AddMemberName("MenuItemContainerStyle");
                userType.AddMemberName("MenuItemContainerStyleSelector");
                userType.AddMemberName("MenuItemTemplate");
                userType.AddMemberName("MenuItemTemplateSelector");
                userType.AddMemberName("MenuItemsSource");
                userType.AddMemberName("OverflowLabelMode");
                userType.AddMemberName("PaneCustomContent");
                userType.AddMemberName("PaneHeader");
                userType.AddMemberName("PaneTitle");
                userType.AddMemberName("PaneToggleButtonStyle");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("SelectionFollowsFocus");
                userType.AddMemberName("SettingsItem");
                userType.AddMemberName("ShoulderNavigationEnabled");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 50:   //  Microsoft.UI.Xaml.Controls.ContentControl
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 51:   //  Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_51_NavigationViewPaneDisplayMode;
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Auto);
                userType.AddEnumValue("Left", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Left);
                userType.AddEnumValue("Top", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Top);
                userType.AddEnumValue("LeftCompact", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.LeftCompact);
                userType.AddEnumValue("LeftMinimal", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.LeftMinimal);
                xamlType = userType;
                break;

            case 52:   //  Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_52_NavigationViewBackButtonVisible;
                userType.AddEnumValue("Collapsed", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Collapsed);
                userType.AddEnumValue("Visible", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Visible);
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Auto);
                xamlType = userType;
                break;

            case 53:   //  System.Collections.Generic.IList`1<Object>
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_53_IList;
                userType.CollectionAdd = VectorAdd_53_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 54:   //  Microsoft.UI.Xaml.UIElement
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 55:   //  Microsoft.UI.Xaml.Controls.AutoSuggestBox
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 56:   //  Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_56_NavigationViewDisplayMode;
                userType.AddEnumValue("Minimal", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Minimal);
                userType.AddEnumValue("Compact", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Compact);
                userType.AddEnumValue("Expanded", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Expanded);
                xamlType = userType;
                break;

            case 57:   //  Microsoft.UI.Xaml.Controls.StyleSelector
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 58:   //  Microsoft.UI.Xaml.Controls.DataTemplateSelector
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 59:   //  Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_59_NavigationViewOverflowLabelMode;
                userType.AddEnumValue("MoreLabel", global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode.MoreLabel);
                userType.AddEnumValue("NoLabel", global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode.NoLabel);
                xamlType = userType;
                break;

            case 60:   //  Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_60_NavigationViewSelectionFollowsFocus;
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus.Disabled);
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus.Enabled);
                xamlType = userType;
                break;

            case 61:   //  Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_61_NavigationViewShoulderNavigationEnabled;
                userType.AddEnumValue("WhenSelectionFollowsFocus", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.WhenSelectionFollowsFocus);
                userType.AddEnumValue("Always", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.Always);
                userType.AddEnumValue("Never", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.Never);
                xamlType = userType;
                break;

            case 62:   //  Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_62_NavigationViewTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 63:   //  Microsoft.UI.Xaml.Controls.NavigationViewItem
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItemBase"));
                userType.Activator = Activate_63_NavigationViewItem;
                userType.StaticInitializer = StaticInitializer_63_NavigationViewItem;
                userType.AddMemberName("Icon");
                userType.AddMemberName("CompactPaneLength");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("InfoBadge");
                userType.AddMemberName("IsChildSelected");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("MenuItems");
                userType.AddMemberName("MenuItemsSource");
                userType.AddMemberName("SelectsOnInvoked");
                xamlType = userType;
                break;

            case 64:   //  Microsoft.UI.Xaml.Controls.NavigationViewItemBase
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.StaticInitializer = StaticInitializer_64_NavigationViewItemBase;
                userType.AddMemberName("IsSelected");
                xamlType = userType;
                break;

            case 65:   //  Microsoft.UI.Xaml.Controls.IconElement
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 66:   //  Microsoft.UI.Xaml.Controls.InfoBadge
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.StaticInitializer = StaticInitializer_66_InfoBadge;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 67:   //  Microsoft.UI.Xaml.Controls.PersonPicture
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_67_PersonPicture;
                userType.StaticInitializer = StaticInitializer_67_PersonPicture;
                userType.AddMemberName("ProfilePicture");
                userType.AddMemberName("BadgeGlyph");
                userType.AddMemberName("BadgeImageSource");
                userType.AddMemberName("BadgeNumber");
                userType.AddMemberName("BadgeText");
                userType.AddMemberName("Contact");
                userType.AddMemberName("DisplayName");
                userType.AddMemberName("Initials");
                userType.AddMemberName("IsGroup");
                userType.AddMemberName("PreferSmallImage");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 68:   //  Microsoft.UI.Xaml.Media.ImageSource
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 69:   //  Windows.ApplicationModel.Contacts.Contact
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_69_Contact;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 70:   //  Microsoft.UI.Xaml.Controls.PersonPictureTemplateSettings
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_70_PersonPictureTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 71:   //  GameCenter.MainWindow
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GameCenter.CustomWindow"));
                userType.Activator = Activate_71_MainWindow;
                userType.StaticInitializer = StaticInitializer_71_MainWindow;
                userType.AddMemberName("CurrentTime");
                userType.AddMemberName("RecommendedGames");
                userType.AddMemberName("ExploreGames");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 72:   //  GameCenter.Pages.Friends
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_72_Friends;
                userType.StaticInitializer = StaticInitializer_72_Friends;
                userType.AddMemberName("Friendes");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 73:   //  System.Collections.ObjectModel.ObservableCollection`1<GameCenter.Helpers.Friend>
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<GameCenter.Helpers.Friend>"));
                userType.StaticInitializer = StaticInitializer_73_ObservableCollection;
                userType.CollectionAdd = VectorAdd_73_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 74:   //  System.Collections.ObjectModel.Collection`1<GameCenter.Helpers.Friend>
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_74_Collection;
                userType.StaticInitializer = StaticInitializer_74_Collection;
                userType.CollectionAdd = VectorAdd_74_Collection;
                xamlType = userType;
                break;

            case 75:   //  GameCenter.Helpers.Friend
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_75_Friend;
                userType.StaticInitializer = StaticInitializer_75_Friend;
                userType.AddMemberName("Name");
                userType.AddMemberName("Status");
                userType.AddMemberName("StatusColor");
                userType.AddMemberName("ProfilePicture");
                userType.AddMemberName("Platform");
                userType.AddMemberName("PlatformIcon");
                xamlType = userType;
                break;

            case 76:   //  Microsoft.UI.Xaml.Media.SolidColorBrush
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 77:   //  GameCenter.Pages.GameCenterSetup
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Window"));
                userType.Activator = Activate_77_GameCenterSetup;
                userType.StaticInitializer = StaticInitializer_77_GameCenterSetup;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 78:   //  GameCenter.Pages.InstallerProgressWindow
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Window"));
                userType.Activator = Activate_78_InstallerProgressWindow;
                userType.StaticInitializer = StaticInitializer_78_InstallerProgressWindow;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 79:   //  Microsoft.UI.Xaml.Controls.ItemsRepeater
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement"));
                userType.Activator = Activate_79_ItemsRepeater;
                userType.StaticInitializer = StaticInitializer_79_ItemsRepeater;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemTemplate");
                userType.AddMemberName("ItemTemplate");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("Layout");
                userType.AddMemberName("Background");
                userType.AddMemberName("HorizontalCacheLength");
                userType.AddMemberName("ItemTransitionProvider");
                userType.AddMemberName("ItemsSourceView");
                userType.AddMemberName("VerticalCacheLength");
                xamlType = userType;
                break;

            case 80:   //  Microsoft.UI.Xaml.FrameworkElement
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 81:   //  Microsoft.UI.Xaml.Controls.Layout
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_81_Layout;
                userType.AddMemberName("IndexBasedLayoutOrientation");
                xamlType = userType;
                break;

            case 82:   //  Microsoft.UI.Xaml.Media.Brush
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 83:   //  Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_83_ItemCollectionTransitionProvider;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 84:   //  Microsoft.UI.Xaml.Controls.ItemsSourceView
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_84_ItemsSourceView;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 85:   //  Microsoft.UI.Xaml.Controls.ProgressBar
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Primitives.RangeBase"));
                userType.Activator = Activate_85_ProgressBar;
                userType.StaticInitializer = StaticInitializer_85_ProgressBar;
                userType.AddMemberName("IsIndeterminate");
                userType.AddMemberName("ShowError");
                userType.AddMemberName("ShowPaused");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 86:   //  Microsoft.UI.Xaml.Controls.Primitives.RangeBase
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 87:   //  Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_87_ProgressBarTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 88:   //  GameCenter.Pages.LauncherInfo
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_88_LauncherInfo;
                userType.StaticInitializer = StaticInitializer_88_LauncherInfo;
                userType.AddMemberName("Name");
                userType.AddMemberName("IconPath");
                userType.AddMemberName("DownloadUrl");
                userType.AddMemberName("InstallPath");
                userType.AddMemberName("UbisoftInstallType");
                userType.AddMemberName("InstallerType");
                userType.AddMemberName("IsInstalled");
                userType.AddMemberName("Progress");
                userType.AddMemberName("ProgressVisibility");
                userType.AddMemberName("ActionButtonText");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 89:   //  Microsoft.UI.Xaml.Visibility
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 90:   //  Microsoft.UI.Xaml.Controls.UniformGridLayout
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.VirtualizingLayout"));
                userType.Activator = Activate_90_UniformGridLayout;
                userType.StaticInitializer = StaticInitializer_90_UniformGridLayout;
                userType.AddMemberName("MinItemWidth");
                userType.AddMemberName("MinItemHeight");
                userType.AddMemberName("ItemsStretch");
                userType.AddMemberName("ItemsJustification");
                userType.AddMemberName("MaximumRowsOrColumns");
                userType.AddMemberName("MinColumnSpacing");
                userType.AddMemberName("MinRowSpacing");
                userType.AddMemberName("Orientation");
                xamlType = userType;
                break;

            case 91:   //  Microsoft.UI.Xaml.Controls.VirtualizingLayout
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Layout"));
                userType.Activator = Activate_91_VirtualizingLayout;
                userType.StaticInitializer = StaticInitializer_91_VirtualizingLayout;
                xamlType = userType;
                break;

            case 92:   //  Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_92_UniformGridLayoutItemsStretch;
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch.None);
                userType.AddEnumValue("Fill", global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch.Fill);
                userType.AddEnumValue("Uniform", global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch.Uniform);
                xamlType = userType;
                break;

            case 93:   //  Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_93_UniformGridLayoutItemsJustification;
                userType.AddEnumValue("Start", global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification.Start);
                userType.AddEnumValue("Center", global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification.Center);
                userType.AddEnumValue("End", global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification.End);
                userType.AddEnumValue("SpaceAround", global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification.SpaceAround);
                userType.AddEnumValue("SpaceBetween", global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification.SpaceBetween);
                userType.AddEnumValue("SpaceEvenly", global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification.SpaceEvenly);
                xamlType = userType;
                break;

            case 94:   //  Microsoft.UI.Xaml.Controls.Orientation
                xamlType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 95:   //  Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_95_IndexBasedLayoutOrientation;
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation.None);
                userType.AddEnumValue("TopToBottom", global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation.TopToBottom);
                userType.AddEnumValue("LeftToRight", global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation.LeftToRight);
                xamlType = userType;
                break;

            case 96:   //  GameCenter.Pages.PlatformInstaller
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_96_PlatformInstaller;
                userType.StaticInitializer = StaticInitializer_96_PlatformInstaller;
                userType.AddMemberName("Launchers");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 97:   //  System.Collections.ObjectModel.ObservableCollection`1<GameCenter.Pages.LauncherInfo>
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<GameCenter.Pages.LauncherInfo>"));
                userType.StaticInitializer = StaticInitializer_97_ObservableCollection;
                userType.CollectionAdd = VectorAdd_97_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 98:   //  System.Collections.ObjectModel.Collection`1<GameCenter.Pages.LauncherInfo>
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_98_Collection;
                userType.StaticInitializer = StaticInitializer_98_Collection;
                userType.CollectionAdd = VectorAdd_98_Collection;
                xamlType = userType;
                break;

            case 99:   //  Microsoft.UI.Xaml.Controls.Expander
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_99_Expander;
                userType.StaticInitializer = StaticInitializer_99_Expander;
                userType.AddMemberName("Header");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("ExpandDirection");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("HeaderTemplateSelector");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 100:   //  Microsoft.UI.Xaml.Controls.ExpandDirection
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_100_ExpandDirection;
                userType.AddEnumValue("Down", global::Microsoft.UI.Xaml.Controls.ExpandDirection.Down);
                userType.AddEnumValue("Up", global::Microsoft.UI.Xaml.Controls.ExpandDirection.Up);
                xamlType = userType;
                break;

            case 101:   //  Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_101_ExpanderTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 102:   //  GameCenter.Pages.Settings
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_102_Settings;
                userType.StaticInitializer = StaticInitializer_102_Settings;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 103:   //  Microsoft.UI.Xaml.Controls.TreeViewNode
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_103_TreeViewNode;
                userType.StaticInitializer = StaticInitializer_103_TreeViewNode;
                userType.AddMemberName("Children");
                userType.AddMemberName("Content");
                userType.AddMemberName("Depth");
                userType.AddMemberName("HasChildren");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("Parent");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 104:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>
                userType = new global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_104_IList;
                userType.CollectionAdd = VectorAdd_104_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::GameCenter.Helpers.GameCenter_Helpers_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_XamlControlsResources_UseCompactResources(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            return that.UseCompactResources;
        }
        private void set_0_XamlControlsResources_UseCompactResources(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            that.UseCompactResources = (global::System.Boolean)Value;
        }
        private object get_1_InfoBar_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.Content;
        }
        private void set_1_InfoBar_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_2_InfoBar_IsOpen(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.IsOpen;
        }
        private void set_2_InfoBar_IsOpen(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.IsOpen = (global::System.Boolean)Value;
        }
        private object get_3_InfoBar_Severity(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.Severity;
        }
        private void set_3_InfoBar_Severity(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.Severity = (global::Microsoft.UI.Xaml.Controls.InfoBarSeverity)Value;
        }
        private object get_4_InfoBar_Title(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.Title;
        }
        private void set_4_InfoBar_Title(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_5_InfoBar_IsClosable(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.IsClosable;
        }
        private void set_5_InfoBar_IsClosable(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.IsClosable = (global::System.Boolean)Value;
        }
        private object get_6_InfoBar_Message(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.Message;
        }
        private void set_6_InfoBar_Message(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.Message = (global::System.String)Value;
        }
        private object get_7_InfoBar_ActionButton(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.ActionButton;
        }
        private void set_7_InfoBar_ActionButton(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.ActionButton = (global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase)Value;
        }
        private object get_8_InfoBar_CloseButtonCommand(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.CloseButtonCommand;
        }
        private void set_8_InfoBar_CloseButtonCommand(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.CloseButtonCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_9_InfoBar_CloseButtonCommandParameter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.CloseButtonCommandParameter;
        }
        private void set_9_InfoBar_CloseButtonCommandParameter(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.CloseButtonCommandParameter = (global::System.Object)Value;
        }
        private object get_10_InfoBar_CloseButtonStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.CloseButtonStyle;
        }
        private void set_10_InfoBar_CloseButtonStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.CloseButtonStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_11_InfoBar_ContentTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.ContentTemplate;
        }
        private void set_11_InfoBar_ContentTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.ContentTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_12_InfoBar_IconSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.IconSource;
        }
        private void set_12_InfoBar_IconSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.IconSource = (global::Microsoft.UI.Xaml.Controls.IconSource)Value;
        }
        private object get_13_InfoBar_IsIconVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.IsIconVisible;
        }
        private void set_13_InfoBar_IsIconVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.IsIconVisible = (global::System.Boolean)Value;
        }
        private object get_14_InfoBar_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.TemplateSettings;
        }
        private object get_15_ProgressRing_IsActive(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.IsActive;
        }
        private void set_15_ProgressRing_IsActive(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.IsActive = (global::System.Boolean)Value;
        }
        private object get_16_ProgressRing_IsIndeterminate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.IsIndeterminate;
        }
        private void set_16_ProgressRing_IsIndeterminate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.IsIndeterminate = (global::System.Boolean)Value;
        }
        private object get_17_ProgressRing_Maximum(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Maximum;
        }
        private void set_17_ProgressRing_Maximum(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Maximum = (global::System.Double)Value;
        }
        private object get_18_ProgressRing_Minimum(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Minimum;
        }
        private void set_18_ProgressRing_Minimum(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Minimum = (global::System.Double)Value;
        }
        private object get_19_ProgressRing_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.TemplateSettings;
        }
        private object get_20_ProgressRing_Value(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Value;
        }
        private void set_20_ProgressRing_Value(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Value = (global::System.Double)Value;
        }
        private object get_21_GameDetailsControl_Game(object instance)
        {
            var that = (global::GameCenter.Helpers.GameDetailsControl)instance;
            return that.Game;
        }
        private void set_21_GameDetailsControl_Game(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.GameDetailsControl)instance;
            that.Game = (global::GameCenter.Helpers.Game)Value;
        }
        private object get_22_GamePage_SteamGames(object instance)
        {
            var that = (global::GameCenter.GamePage)instance;
            return that.SteamGames;
        }
        private object get_23_Game_Id(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.Id;
        }
        private void set_23_Game_Id(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.Id = (global::System.String)Value;
        }
        private object get_24_Game_GameId(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.GameId;
        }
        private void set_24_Game_GameId(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.GameId = (global::System.Int32)Value;
        }
        private object get_25_Game_AppId(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.AppId;
        }
        private void set_25_Game_AppId(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.AppId = (global::System.UInt32)Value;
        }
        private object get_26_Game_PlaytimeForever(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.PlaytimeForever;
        }
        private void set_26_Game_PlaytimeForever(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.PlaytimeForever = (global::System.UInt32)Value;
        }
        private object get_27_Game_Name(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.Name;
        }
        private void set_27_Game_Name(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_28_Game_Title(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.Title;
        }
        private void set_28_Game_Title(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_29_Game_Description(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.Description;
        }
        private void set_29_Game_Description(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.Description = (global::System.String)Value;
        }
        private object get_30_Game_ImageUrl(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.ImageUrl;
        }
        private void set_30_Game_ImageUrl(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.ImageUrl = (global::System.String)Value;
        }
        private object get_31_Game_LaunchUri(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.LaunchUri;
        }
        private void set_31_Game_LaunchUri(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.LaunchUri = (global::System.String)Value;
        }
        private object get_32_Game_Launcher(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.Launcher;
        }
        private void set_32_Game_Launcher(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.Launcher = (global::System.String)Value;
        }
        private object get_33_Game_LastPlayed(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.LastPlayed;
        }
        private void set_33_Game_LastPlayed(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.LastPlayed = (global::System.DateTime)Value;
        }
        private object get_34_Game_Screenshots(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.Screenshots;
        }
        private void set_34_Game_Screenshots(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.Screenshots = (global::System.Collections.Generic.List<global::System.String>)Value;
        }
        private object get_35_Game_ExecutablePath(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.ExecutablePath;
        }
        private void set_35_Game_ExecutablePath(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.ExecutablePath = (global::System.String)Value;
        }
        private object get_36_Game_InstallPath(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.InstallPath;
        }
        private void set_36_Game_InstallPath(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.InstallPath = (global::System.String)Value;
        }
        private object get_37_Game_InstallLocation(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.InstallLocation;
        }
        private void set_37_Game_InstallLocation(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.InstallLocation = (global::System.String)Value;
        }
        private object get_38_Game_Version(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.Version;
        }
        private void set_38_Game_Version(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.Version = (global::System.String)Value;
        }
        private object get_39_Game_Publisher(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.Publisher;
        }
        private void set_39_Game_Publisher(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.Publisher = (global::System.String)Value;
        }
        private object get_40_Game_Developer(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.Developer;
        }
        private void set_40_Game_Developer(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.Developer = (global::System.String)Value;
        }
        private object get_41_Game_ReleaseDate(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.ReleaseDate;
        }
        private void set_41_Game_ReleaseDate(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.ReleaseDate = (global::System.String)Value;
        }
        private object get_42_Game_Genre(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.Genre;
        }
        private void set_42_Game_Genre(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.Genre = (global::System.String)Value;
        }
        private object get_43_Game_PlayTime(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.PlayTime;
        }
        private void set_43_Game_PlayTime(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.PlayTime = (global::System.Int32)Value;
        }
        private object get_44_Game_Platform(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.Platform;
        }
        private void set_44_Game_Platform(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.Platform = (global::GameCenter.Helpers.GamePlatform)Value;
        }
        private object get_45_Game_ImageSource(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.ImageSource;
        }
        private void set_45_Game_ImageSource(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.ImageSource = (global::Microsoft.UI.Xaml.Media.Imaging.BitmapImage)Value;
        }
        private object get_46_Game_ScreenshotSources(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.ScreenshotSources;
        }
        private void set_46_Game_ScreenshotSources(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.ScreenshotSources = (global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Media.Imaging.BitmapImage>)Value;
        }
        private object get_47_Game_AvailableDLC(object instance)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            return that.AvailableDLC;
        }
        private void set_47_Game_AvailableDLC(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Game)instance;
            that.AvailableDLC = (global::System.Collections.ObjectModel.ObservableCollection<global::GameCenter.Helpers.DLC>)Value;
        }
        private object get_48_DLC_Id(object instance)
        {
            var that = (global::GameCenter.Helpers.DLC)instance;
            return that.Id;
        }
        private void set_48_DLC_Id(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.DLC)instance;
            that.Id = (global::System.Int32)Value;
        }
        private object get_49_DLC_GameId(object instance)
        {
            var that = (global::GameCenter.Helpers.DLC)instance;
            return that.GameId;
        }
        private void set_49_DLC_GameId(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.DLC)instance;
            that.GameId = (global::System.Int32)Value;
        }
        private object get_50_DLC_Title(object instance)
        {
            var that = (global::GameCenter.Helpers.DLC)instance;
            return that.Title;
        }
        private void set_50_DLC_Title(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.DLC)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_51_DLC_ImageUrl(object instance)
        {
            var that = (global::GameCenter.Helpers.DLC)instance;
            return that.ImageUrl;
        }
        private void set_51_DLC_ImageUrl(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.DLC)instance;
            that.ImageUrl = (global::System.String)Value;
        }
        private object get_52_DLC_Price(object instance)
        {
            var that = (global::GameCenter.Helpers.DLC)instance;
            return that.Price;
        }
        private void set_52_DLC_Price(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.DLC)instance;
            that.Price = (global::System.String)Value;
        }
        private object get_53_GamePage_XboxGames(object instance)
        {
            var that = (global::GameCenter.GamePage)instance;
            return that.XboxGames;
        }
        private object get_54_GamePage_EpicGames(object instance)
        {
            var that = (global::GameCenter.GamePage)instance;
            return that.EpicGames;
        }
        private object get_55_GamePage_OtherGames(object instance)
        {
            var that = (global::GameCenter.GamePage)instance;
            return that.OtherGames;
        }
        private object get_56_GamePage_CustomPaths(object instance)
        {
            var that = (global::GameCenter.GamePage)instance;
            return that.CustomPaths;
        }
        private object get_57_GamePath_Id(object instance)
        {
            var that = (global::GameCenter.Helpers.Models.GamePath)instance;
            return that.Id;
        }
        private void set_57_GamePath_Id(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Models.GamePath)instance;
            that.Id = (global::System.String)Value;
        }
        private object get_58_GamePath_Path(object instance)
        {
            var that = (global::GameCenter.Helpers.Models.GamePath)instance;
            return that.Path;
        }
        private void set_58_GamePath_Path(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Models.GamePath)instance;
            that.Path = (global::System.String)Value;
        }
        private object get_59_GamePath_Name(object instance)
        {
            var that = (global::GameCenter.Helpers.Models.GamePath)instance;
            return that.Name;
        }
        private void set_59_GamePath_Name(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Models.GamePath)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_60_GamePath_LauncherType(object instance)
        {
            var that = (global::GameCenter.Helpers.Models.GamePath)instance;
            return that.LauncherType;
        }
        private void set_60_GamePath_LauncherType(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Models.GamePath)instance;
            that.LauncherType = (global::System.String)Value;
        }
        private object get_61_GamePath_DateAdded(object instance)
        {
            var that = (global::GameCenter.Helpers.Models.GamePath)instance;
            return that.DateAdded;
        }
        private void set_61_GamePath_DateAdded(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Models.GamePath)instance;
            that.DateAdded = (global::System.DateTime)Value;
        }
        private object get_62_GamePath_IsActive(object instance)
        {
            var that = (global::GameCenter.Helpers.Models.GamePath)instance;
            return that.IsActive;
        }
        private void set_62_GamePath_IsActive(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Models.GamePath)instance;
            that.IsActive = (global::System.Boolean)Value;
        }
        private object get_63_MicaBackdrop_Kind(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Media.MicaBackdrop)instance;
            return that.Kind;
        }
        private void set_63_MicaBackdrop_Kind(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Media.MicaBackdrop)instance;
            that.Kind = (global::Microsoft.UI.Composition.SystemBackdrops.MicaKind)Value;
        }
        private object get_64_NavigationView_PaneDisplayMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneDisplayMode;
        }
        private void set_64_NavigationView_PaneDisplayMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneDisplayMode = (global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode)Value;
        }
        private object get_65_NavigationView_IsSettingsVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsSettingsVisible;
        }
        private void set_65_NavigationView_IsSettingsVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsSettingsVisible = (global::System.Boolean)Value;
        }
        private object get_66_NavigationView_IsBackButtonVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsBackButtonVisible;
        }
        private void set_66_NavigationView_IsBackButtonVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsBackButtonVisible = (global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible)Value;
        }
        private object get_67_NavigationView_OpenPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.OpenPaneLength;
        }
        private void set_67_NavigationView_OpenPaneLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.OpenPaneLength = (global::System.Double)Value;
        }
        private object get_68_NavigationView_CompactPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.CompactPaneLength;
        }
        private void set_68_NavigationView_CompactPaneLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.CompactPaneLength = (global::System.Double)Value;
        }
        private object get_69_NavigationView_IsPaneToggleButtonVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneToggleButtonVisible;
        }
        private void set_69_NavigationView_IsPaneToggleButtonVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneToggleButtonVisible = (global::System.Boolean)Value;
        }
        private object get_70_NavigationView_MenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItems;
        }
        private object get_71_NavigationView_PaneFooter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneFooter;
        }
        private void set_71_NavigationView_PaneFooter(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneFooter = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_72_NavigationView_AlwaysShowHeader(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.AlwaysShowHeader;
        }
        private void set_72_NavigationView_AlwaysShowHeader(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.AlwaysShowHeader = (global::System.Boolean)Value;
        }
        private object get_73_NavigationView_AutoSuggestBox(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.AutoSuggestBox;
        }
        private void set_73_NavigationView_AutoSuggestBox(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.AutoSuggestBox = (global::Microsoft.UI.Xaml.Controls.AutoSuggestBox)Value;
        }
        private object get_74_NavigationView_CompactModeThresholdWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.CompactModeThresholdWidth;
        }
        private void set_74_NavigationView_CompactModeThresholdWidth(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.CompactModeThresholdWidth = (global::System.Double)Value;
        }
        private object get_75_NavigationView_ContentOverlay(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ContentOverlay;
        }
        private void set_75_NavigationView_ContentOverlay(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ContentOverlay = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_76_NavigationView_DisplayMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.DisplayMode;
        }
        private object get_77_NavigationView_ExpandedModeThresholdWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ExpandedModeThresholdWidth;
        }
        private void set_77_NavigationView_ExpandedModeThresholdWidth(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ExpandedModeThresholdWidth = (global::System.Double)Value;
        }
        private object get_78_NavigationView_FooterMenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.FooterMenuItems;
        }
        private object get_79_NavigationView_FooterMenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.FooterMenuItemsSource;
        }
        private void set_79_NavigationView_FooterMenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.FooterMenuItemsSource = (global::System.Object)Value;
        }
        private object get_80_NavigationView_Header(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.Header;
        }
        private void set_80_NavigationView_Header(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_81_NavigationView_HeaderTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.HeaderTemplate;
        }
        private void set_81_NavigationView_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.HeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_82_NavigationView_IsBackEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsBackEnabled;
        }
        private void set_82_NavigationView_IsBackEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsBackEnabled = (global::System.Boolean)Value;
        }
        private object get_83_NavigationView_IsPaneOpen(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneOpen;
        }
        private void set_83_NavigationView_IsPaneOpen(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneOpen = (global::System.Boolean)Value;
        }
        private object get_84_NavigationView_IsPaneVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneVisible;
        }
        private void set_84_NavigationView_IsPaneVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneVisible = (global::System.Boolean)Value;
        }
        private object get_85_NavigationView_IsTitleBarAutoPaddingEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsTitleBarAutoPaddingEnabled;
        }
        private void set_85_NavigationView_IsTitleBarAutoPaddingEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsTitleBarAutoPaddingEnabled = (global::System.Boolean)Value;
        }
        private object get_86_NavigationView_MenuItemContainerStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemContainerStyle;
        }
        private void set_86_NavigationView_MenuItemContainerStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemContainerStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_87_NavigationView_MenuItemContainerStyleSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemContainerStyleSelector;
        }
        private void set_87_NavigationView_MenuItemContainerStyleSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemContainerStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_88_NavigationView_MenuItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemTemplate;
        }
        private void set_88_NavigationView_MenuItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_89_NavigationView_MenuItemTemplateSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemTemplateSelector;
        }
        private void set_89_NavigationView_MenuItemTemplateSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_90_NavigationView_MenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemsSource;
        }
        private void set_90_NavigationView_MenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemsSource = (global::System.Object)Value;
        }
        private object get_91_NavigationView_OverflowLabelMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.OverflowLabelMode;
        }
        private void set_91_NavigationView_OverflowLabelMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.OverflowLabelMode = (global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode)Value;
        }
        private object get_92_NavigationView_PaneCustomContent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneCustomContent;
        }
        private void set_92_NavigationView_PaneCustomContent(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneCustomContent = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_93_NavigationView_PaneHeader(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneHeader;
        }
        private void set_93_NavigationView_PaneHeader(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneHeader = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_94_NavigationView_PaneTitle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneTitle;
        }
        private void set_94_NavigationView_PaneTitle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneTitle = (global::System.String)Value;
        }
        private object get_95_NavigationView_PaneToggleButtonStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneToggleButtonStyle;
        }
        private void set_95_NavigationView_PaneToggleButtonStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneToggleButtonStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_96_NavigationView_SelectedItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SelectedItem;
        }
        private void set_96_NavigationView_SelectedItem(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_97_NavigationView_SelectionFollowsFocus(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SelectionFollowsFocus;
        }
        private void set_97_NavigationView_SelectionFollowsFocus(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.SelectionFollowsFocus = (global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus)Value;
        }
        private object get_98_NavigationView_SettingsItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SettingsItem;
        }
        private object get_99_NavigationView_ShoulderNavigationEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ShoulderNavigationEnabled;
        }
        private void set_99_NavigationView_ShoulderNavigationEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ShoulderNavigationEnabled = (global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled)Value;
        }
        private object get_100_NavigationView_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.TemplateSettings;
        }
        private object get_101_NavigationViewItemBase_IsSelected(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase)instance;
            return that.IsSelected;
        }
        private void set_101_NavigationViewItemBase_IsSelected(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase)instance;
            that.IsSelected = (global::System.Boolean)Value;
        }
        private object get_102_NavigationViewItem_Icon(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.Icon;
        }
        private void set_102_NavigationViewItem_Icon(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.Icon = (global::Microsoft.UI.Xaml.Controls.IconElement)Value;
        }
        private object get_103_NavigationViewItem_CompactPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.CompactPaneLength;
        }
        private object get_104_NavigationViewItem_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_104_NavigationViewItem_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_105_NavigationViewItem_InfoBadge(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.InfoBadge;
        }
        private void set_105_NavigationViewItem_InfoBadge(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.InfoBadge = (global::Microsoft.UI.Xaml.Controls.InfoBadge)Value;
        }
        private object get_106_NavigationViewItem_IsChildSelected(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.IsChildSelected;
        }
        private void set_106_NavigationViewItem_IsChildSelected(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.IsChildSelected = (global::System.Boolean)Value;
        }
        private object get_107_NavigationViewItem_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.IsExpanded;
        }
        private void set_107_NavigationViewItem_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_108_NavigationViewItem_MenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.MenuItems;
        }
        private object get_109_NavigationViewItem_MenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.MenuItemsSource;
        }
        private void set_109_NavigationViewItem_MenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.MenuItemsSource = (global::System.Object)Value;
        }
        private object get_110_NavigationViewItem_SelectsOnInvoked(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.SelectsOnInvoked;
        }
        private void set_110_NavigationViewItem_SelectsOnInvoked(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.SelectsOnInvoked = (global::System.Boolean)Value;
        }
        private object get_111_PersonPicture_ProfilePicture(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            return that.ProfilePicture;
        }
        private void set_111_PersonPicture_ProfilePicture(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            that.ProfilePicture = (global::Microsoft.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_112_PersonPicture_BadgeGlyph(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            return that.BadgeGlyph;
        }
        private void set_112_PersonPicture_BadgeGlyph(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            that.BadgeGlyph = (global::System.String)Value;
        }
        private object get_113_PersonPicture_BadgeImageSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            return that.BadgeImageSource;
        }
        private void set_113_PersonPicture_BadgeImageSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            that.BadgeImageSource = (global::Microsoft.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_114_PersonPicture_BadgeNumber(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            return that.BadgeNumber;
        }
        private void set_114_PersonPicture_BadgeNumber(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            that.BadgeNumber = (global::System.Int32)Value;
        }
        private object get_115_PersonPicture_BadgeText(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            return that.BadgeText;
        }
        private void set_115_PersonPicture_BadgeText(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            that.BadgeText = (global::System.String)Value;
        }
        private object get_116_PersonPicture_Contact(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            return that.Contact;
        }
        private void set_116_PersonPicture_Contact(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            that.Contact = (global::Windows.ApplicationModel.Contacts.Contact)Value;
        }
        private object get_117_PersonPicture_DisplayName(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            return that.DisplayName;
        }
        private void set_117_PersonPicture_DisplayName(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            that.DisplayName = (global::System.String)Value;
        }
        private object get_118_PersonPicture_Initials(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            return that.Initials;
        }
        private void set_118_PersonPicture_Initials(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            that.Initials = (global::System.String)Value;
        }
        private object get_119_PersonPicture_IsGroup(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            return that.IsGroup;
        }
        private void set_119_PersonPicture_IsGroup(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            that.IsGroup = (global::System.Boolean)Value;
        }
        private object get_120_PersonPicture_PreferSmallImage(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            return that.PreferSmallImage;
        }
        private void set_120_PersonPicture_PreferSmallImage(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            that.PreferSmallImage = (global::System.Boolean)Value;
        }
        private object get_121_PersonPicture_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            return that.TemplateSettings;
        }
        private object get_122_MainWindow_CurrentTime(object instance)
        {
            var that = (global::GameCenter.MainWindow)instance;
            return that.CurrentTime;
        }
        private void set_122_MainWindow_CurrentTime(object instance, object Value)
        {
            var that = (global::GameCenter.MainWindow)instance;
            that.CurrentTime = (global::System.String)Value;
        }
        private object get_123_MainWindow_RecommendedGames(object instance)
        {
            var that = (global::GameCenter.MainWindow)instance;
            return that.RecommendedGames;
        }
        private object get_124_MainWindow_ExploreGames(object instance)
        {
            var that = (global::GameCenter.MainWindow)instance;
            return that.ExploreGames;
        }
        private object get_125_Friends_Friendes(object instance)
        {
            var that = (global::GameCenter.Pages.Friends)instance;
            return that.Friendes;
        }
        private object get_126_Friend_Name(object instance)
        {
            var that = (global::GameCenter.Helpers.Friend)instance;
            return that.Name;
        }
        private void set_126_Friend_Name(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Friend)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_127_Friend_Status(object instance)
        {
            var that = (global::GameCenter.Helpers.Friend)instance;
            return that.Status;
        }
        private void set_127_Friend_Status(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Friend)instance;
            that.Status = (global::System.String)Value;
        }
        private object get_128_Friend_StatusColor(object instance)
        {
            var that = (global::GameCenter.Helpers.Friend)instance;
            return that.StatusColor;
        }
        private void set_128_Friend_StatusColor(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Friend)instance;
            that.StatusColor = (global::Microsoft.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_129_Friend_ProfilePicture(object instance)
        {
            var that = (global::GameCenter.Helpers.Friend)instance;
            return that.ProfilePicture;
        }
        private void set_129_Friend_ProfilePicture(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Friend)instance;
            that.ProfilePicture = (global::System.String)Value;
        }
        private object get_130_Friend_Platform(object instance)
        {
            var that = (global::GameCenter.Helpers.Friend)instance;
            return that.Platform;
        }
        private void set_130_Friend_Platform(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Friend)instance;
            that.Platform = (global::System.String)Value;
        }
        private object get_131_Friend_PlatformIcon(object instance)
        {
            var that = (global::GameCenter.Helpers.Friend)instance;
            return that.PlatformIcon;
        }
        private void set_131_Friend_PlatformIcon(object instance, object Value)
        {
            var that = (global::GameCenter.Helpers.Friend)instance;
            that.PlatformIcon = (global::System.String)Value;
        }
        private object get_132_ItemsRepeater_ItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.ItemTemplate;
        }
        private void set_132_ItemsRepeater_ItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.ItemTemplate = (global::System.Object)Value;
        }
        private object get_133_ItemsRepeater_ItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.ItemsSource;
        }
        private void set_133_ItemsRepeater_ItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_134_ItemsRepeater_Layout(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.Layout;
        }
        private void set_134_ItemsRepeater_Layout(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.Layout = (global::Microsoft.UI.Xaml.Controls.Layout)Value;
        }
        private object get_135_ItemsRepeater_Background(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.Background;
        }
        private void set_135_ItemsRepeater_Background(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.Background = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_136_ItemsRepeater_HorizontalCacheLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.HorizontalCacheLength;
        }
        private void set_136_ItemsRepeater_HorizontalCacheLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.HorizontalCacheLength = (global::System.Double)Value;
        }
        private object get_137_ItemsRepeater_ItemTransitionProvider(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.ItemTransitionProvider;
        }
        private void set_137_ItemsRepeater_ItemTransitionProvider(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.ItemTransitionProvider = (global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider)Value;
        }
        private object get_138_ItemsRepeater_ItemsSourceView(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.ItemsSourceView;
        }
        private object get_139_ItemsRepeater_VerticalCacheLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.VerticalCacheLength;
        }
        private void set_139_ItemsRepeater_VerticalCacheLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.VerticalCacheLength = (global::System.Double)Value;
        }
        private object get_140_ProgressBar_IsIndeterminate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.IsIndeterminate;
        }
        private void set_140_ProgressBar_IsIndeterminate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            that.IsIndeterminate = (global::System.Boolean)Value;
        }
        private object get_141_ProgressBar_ShowError(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.ShowError;
        }
        private void set_141_ProgressBar_ShowError(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            that.ShowError = (global::System.Boolean)Value;
        }
        private object get_142_ProgressBar_ShowPaused(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.ShowPaused;
        }
        private void set_142_ProgressBar_ShowPaused(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            that.ShowPaused = (global::System.Boolean)Value;
        }
        private object get_143_ProgressBar_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.TemplateSettings;
        }
        private object get_144_LauncherInfo_Name(object instance)
        {
            var that = (global::GameCenter.Pages.LauncherInfo)instance;
            return that.Name;
        }
        private void set_144_LauncherInfo_Name(object instance, object Value)
        {
            var that = (global::GameCenter.Pages.LauncherInfo)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_145_LauncherInfo_IconPath(object instance)
        {
            var that = (global::GameCenter.Pages.LauncherInfo)instance;
            return that.IconPath;
        }
        private void set_145_LauncherInfo_IconPath(object instance, object Value)
        {
            var that = (global::GameCenter.Pages.LauncherInfo)instance;
            that.IconPath = (global::System.String)Value;
        }
        private object get_146_LauncherInfo_DownloadUrl(object instance)
        {
            var that = (global::GameCenter.Pages.LauncherInfo)instance;
            return that.DownloadUrl;
        }
        private void set_146_LauncherInfo_DownloadUrl(object instance, object Value)
        {
            var that = (global::GameCenter.Pages.LauncherInfo)instance;
            that.DownloadUrl = (global::System.String)Value;
        }
        private object get_147_LauncherInfo_InstallPath(object instance)
        {
            var that = (global::GameCenter.Pages.LauncherInfo)instance;
            return that.InstallPath;
        }
        private void set_147_LauncherInfo_InstallPath(object instance, object Value)
        {
            var that = (global::GameCenter.Pages.LauncherInfo)instance;
            that.InstallPath = (global::System.String)Value;
        }
        private object get_148_LauncherInfo_UbisoftInstallType(object instance)
        {
            var that = (global::GameCenter.Pages.LauncherInfo)instance;
            return that.UbisoftInstallType;
        }
        private void set_148_LauncherInfo_UbisoftInstallType(object instance, object Value)
        {
            var that = (global::GameCenter.Pages.LauncherInfo)instance;
            that.UbisoftInstallType = (global::System.String)Value;
        }
        private object get_149_LauncherInfo_InstallerType(object instance)
        {
            var that = (global::GameCenter.Pages.LauncherInfo)instance;
            return that.InstallerType;
        }
        private void set_149_LauncherInfo_InstallerType(object instance, object Value)
        {
            var that = (global::GameCenter.Pages.LauncherInfo)instance;
            that.InstallerType = (global::System.String)Value;
        }
        private object get_150_LauncherInfo_IsInstalled(object instance)
        {
            var that = (global::GameCenter.Pages.LauncherInfo)instance;
            return that.IsInstalled;
        }
        private void set_150_LauncherInfo_IsInstalled(object instance, object Value)
        {
            var that = (global::GameCenter.Pages.LauncherInfo)instance;
            that.IsInstalled = (global::System.Boolean)Value;
        }
        private object get_151_LauncherInfo_Progress(object instance)
        {
            var that = (global::GameCenter.Pages.LauncherInfo)instance;
            return that.Progress;
        }
        private void set_151_LauncherInfo_Progress(object instance, object Value)
        {
            var that = (global::GameCenter.Pages.LauncherInfo)instance;
            that.Progress = (global::System.Int32)Value;
        }
        private object get_152_LauncherInfo_ProgressVisibility(object instance)
        {
            var that = (global::GameCenter.Pages.LauncherInfo)instance;
            return that.ProgressVisibility;
        }
        private object get_153_LauncherInfo_ActionButtonText(object instance)
        {
            var that = (global::GameCenter.Pages.LauncherInfo)instance;
            return that.ActionButtonText;
        }
        private object get_154_UniformGridLayout_MinItemWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            return that.MinItemWidth;
        }
        private void set_154_UniformGridLayout_MinItemWidth(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            that.MinItemWidth = (global::System.Double)Value;
        }
        private object get_155_UniformGridLayout_MinItemHeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            return that.MinItemHeight;
        }
        private void set_155_UniformGridLayout_MinItemHeight(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            that.MinItemHeight = (global::System.Double)Value;
        }
        private object get_156_UniformGridLayout_ItemsStretch(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            return that.ItemsStretch;
        }
        private void set_156_UniformGridLayout_ItemsStretch(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            that.ItemsStretch = (global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch)Value;
        }
        private object get_157_UniformGridLayout_ItemsJustification(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            return that.ItemsJustification;
        }
        private void set_157_UniformGridLayout_ItemsJustification(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            that.ItemsJustification = (global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification)Value;
        }
        private object get_158_UniformGridLayout_MaximumRowsOrColumns(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            return that.MaximumRowsOrColumns;
        }
        private void set_158_UniformGridLayout_MaximumRowsOrColumns(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            that.MaximumRowsOrColumns = (global::System.Int32)Value;
        }
        private object get_159_UniformGridLayout_MinColumnSpacing(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            return that.MinColumnSpacing;
        }
        private void set_159_UniformGridLayout_MinColumnSpacing(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            that.MinColumnSpacing = (global::System.Double)Value;
        }
        private object get_160_UniformGridLayout_MinRowSpacing(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            return that.MinRowSpacing;
        }
        private void set_160_UniformGridLayout_MinRowSpacing(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            that.MinRowSpacing = (global::System.Double)Value;
        }
        private object get_161_UniformGridLayout_Orientation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            return that.Orientation;
        }
        private void set_161_UniformGridLayout_Orientation(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            that.Orientation = (global::Microsoft.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_162_Layout_IndexBasedLayoutOrientation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Layout)instance;
            return that.IndexBasedLayoutOrientation;
        }
        private object get_163_PlatformInstaller_Launchers(object instance)
        {
            var that = (global::GameCenter.Pages.PlatformInstaller)instance;
            return that.Launchers;
        }
        private object get_164_Expander_Header(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.Header;
        }
        private void set_164_Expander_Header(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_165_Expander_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.IsExpanded;
        }
        private void set_165_Expander_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_166_Expander_ExpandDirection(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.ExpandDirection;
        }
        private void set_166_Expander_ExpandDirection(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            that.ExpandDirection = (global::Microsoft.UI.Xaml.Controls.ExpandDirection)Value;
        }
        private object get_167_Expander_HeaderTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.HeaderTemplate;
        }
        private void set_167_Expander_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            that.HeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_168_Expander_HeaderTemplateSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.HeaderTemplateSelector;
        }
        private void set_168_Expander_HeaderTemplateSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            that.HeaderTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_169_Expander_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.TemplateSettings;
        }
        private object get_170_TreeViewNode_Children(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Children;
        }
        private object get_171_TreeViewNode_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Content;
        }
        private void set_171_TreeViewNode_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_172_TreeViewNode_Depth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Depth;
        }
        private object get_173_TreeViewNode_HasChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasChildren;
        }
        private object get_174_TreeViewNode_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_174_TreeViewNode_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_175_TreeViewNode_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.IsExpanded;
        }
        private void set_175_TreeViewNode_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_176_TreeViewNode_Parent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Parent;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::GameCenter.GameCenter_XamlTypeInfo.XamlMember xamlMember = null;
            global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Microsoft.UI.Xaml.Controls.XamlControlsResources.UseCompactResources":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.XamlControlsResources");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "UseCompactResources", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_XamlControlsResources_UseCompactResources;
                xamlMember.Setter = set_0_XamlControlsResources_UseCompactResources;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.Content":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_1_InfoBar_Content;
                xamlMember.Setter = set_1_InfoBar_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.IsOpen":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IsOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_InfoBar_IsOpen;
                xamlMember.Setter = set_2_InfoBar_IsOpen;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.Severity":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Severity", "Microsoft.UI.Xaml.Controls.InfoBarSeverity");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_InfoBar_Severity;
                xamlMember.Setter = set_3_InfoBar_Severity;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.Title":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_InfoBar_Title;
                xamlMember.Setter = set_4_InfoBar_Title;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.IsClosable":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IsClosable", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_InfoBar_IsClosable;
                xamlMember.Setter = set_5_InfoBar_IsClosable;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.Message":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Message", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_InfoBar_Message;
                xamlMember.Setter = set_6_InfoBar_Message;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.ActionButton":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ActionButton", "Microsoft.UI.Xaml.Controls.Primitives.ButtonBase");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_InfoBar_ActionButton;
                xamlMember.Setter = set_7_InfoBar_ActionButton;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.CloseButtonCommand":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "CloseButtonCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_InfoBar_CloseButtonCommand;
                xamlMember.Setter = set_8_InfoBar_CloseButtonCommand;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.CloseButtonCommandParameter":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "CloseButtonCommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_InfoBar_CloseButtonCommandParameter;
                xamlMember.Setter = set_9_InfoBar_CloseButtonCommandParameter;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.CloseButtonStyle":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "CloseButtonStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_InfoBar_CloseButtonStyle;
                xamlMember.Setter = set_10_InfoBar_CloseButtonStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.ContentTemplate":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ContentTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_InfoBar_ContentTemplate;
                xamlMember.Setter = set_11_InfoBar_ContentTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.IconSource":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IconSource", "Microsoft.UI.Xaml.Controls.IconSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_InfoBar_IconSource;
                xamlMember.Setter = set_12_InfoBar_IconSource;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.IsIconVisible":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IsIconVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_InfoBar_IsIconVisible;
                xamlMember.Setter = set_13_InfoBar_IsIconVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.TemplateSettings":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_InfoBar_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.IsActive":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IsActive", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_ProgressRing_IsActive;
                xamlMember.Setter = set_15_ProgressRing_IsActive;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.IsIndeterminate":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IsIndeterminate", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_ProgressRing_IsIndeterminate;
                xamlMember.Setter = set_16_ProgressRing_IsIndeterminate;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Maximum":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Maximum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_ProgressRing_Maximum;
                xamlMember.Setter = set_17_ProgressRing_Maximum;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Minimum":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Minimum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_ProgressRing_Minimum;
                xamlMember.Setter = set_18_ProgressRing_Minimum;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.TemplateSettings":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings");
                xamlMember.Getter = get_19_ProgressRing_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Value":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Value", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_ProgressRing_Value;
                xamlMember.Setter = set_20_ProgressRing_Value;
                break;
            case "GameCenter.Helpers.GameDetailsControl.Game":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.GameDetailsControl");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Game", "GameCenter.Helpers.Game");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_GameDetailsControl_Game;
                xamlMember.Setter = set_21_GameDetailsControl_Game;
                break;
            case "GameCenter.GamePage.SteamGames":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.GamePage");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "SteamGames", "System.Collections.ObjectModel.ObservableCollection`1<GameCenter.Helpers.Game>");
                xamlMember.Getter = get_22_GamePage_SteamGames;
                xamlMember.SetIsReadOnly();
                break;
            case "GameCenter.Helpers.Game.Id":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Id", "String");
                xamlMember.Getter = get_23_Game_Id;
                xamlMember.Setter = set_23_Game_Id;
                break;
            case "GameCenter.Helpers.Game.GameId":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "GameId", "Int32");
                xamlMember.Getter = get_24_Game_GameId;
                xamlMember.Setter = set_24_Game_GameId;
                break;
            case "GameCenter.Helpers.Game.AppId":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "AppId", "UInt32");
                xamlMember.Getter = get_25_Game_AppId;
                xamlMember.Setter = set_25_Game_AppId;
                break;
            case "GameCenter.Helpers.Game.PlaytimeForever":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "PlaytimeForever", "UInt32");
                xamlMember.Getter = get_26_Game_PlaytimeForever;
                xamlMember.Setter = set_26_Game_PlaytimeForever;
                break;
            case "GameCenter.Helpers.Game.Name":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_27_Game_Name;
                xamlMember.Setter = set_27_Game_Name;
                break;
            case "GameCenter.Helpers.Game.Title":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_28_Game_Title;
                xamlMember.Setter = set_28_Game_Title;
                break;
            case "GameCenter.Helpers.Game.Description":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Description", "String");
                xamlMember.Getter = get_29_Game_Description;
                xamlMember.Setter = set_29_Game_Description;
                break;
            case "GameCenter.Helpers.Game.ImageUrl":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ImageUrl", "String");
                xamlMember.Getter = get_30_Game_ImageUrl;
                xamlMember.Setter = set_30_Game_ImageUrl;
                break;
            case "GameCenter.Helpers.Game.LaunchUri":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "LaunchUri", "String");
                xamlMember.Getter = get_31_Game_LaunchUri;
                xamlMember.Setter = set_31_Game_LaunchUri;
                break;
            case "GameCenter.Helpers.Game.Launcher":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Launcher", "String");
                xamlMember.Getter = get_32_Game_Launcher;
                xamlMember.Setter = set_32_Game_Launcher;
                break;
            case "GameCenter.Helpers.Game.LastPlayed":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "LastPlayed", "System.DateTime");
                xamlMember.Getter = get_33_Game_LastPlayed;
                xamlMember.Setter = set_33_Game_LastPlayed;
                break;
            case "GameCenter.Helpers.Game.Screenshots":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Screenshots", "System.Collections.Generic.List`1<String>");
                xamlMember.Getter = get_34_Game_Screenshots;
                xamlMember.Setter = set_34_Game_Screenshots;
                break;
            case "GameCenter.Helpers.Game.ExecutablePath":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ExecutablePath", "String");
                xamlMember.Getter = get_35_Game_ExecutablePath;
                xamlMember.Setter = set_35_Game_ExecutablePath;
                break;
            case "GameCenter.Helpers.Game.InstallPath":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "InstallPath", "String");
                xamlMember.Getter = get_36_Game_InstallPath;
                xamlMember.Setter = set_36_Game_InstallPath;
                break;
            case "GameCenter.Helpers.Game.InstallLocation":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "InstallLocation", "String");
                xamlMember.Getter = get_37_Game_InstallLocation;
                xamlMember.Setter = set_37_Game_InstallLocation;
                break;
            case "GameCenter.Helpers.Game.Version":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Version", "String");
                xamlMember.Getter = get_38_Game_Version;
                xamlMember.Setter = set_38_Game_Version;
                break;
            case "GameCenter.Helpers.Game.Publisher":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Publisher", "String");
                xamlMember.Getter = get_39_Game_Publisher;
                xamlMember.Setter = set_39_Game_Publisher;
                break;
            case "GameCenter.Helpers.Game.Developer":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Developer", "String");
                xamlMember.Getter = get_40_Game_Developer;
                xamlMember.Setter = set_40_Game_Developer;
                break;
            case "GameCenter.Helpers.Game.ReleaseDate":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ReleaseDate", "String");
                xamlMember.Getter = get_41_Game_ReleaseDate;
                xamlMember.Setter = set_41_Game_ReleaseDate;
                break;
            case "GameCenter.Helpers.Game.Genre":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Genre", "String");
                xamlMember.Getter = get_42_Game_Genre;
                xamlMember.Setter = set_42_Game_Genre;
                break;
            case "GameCenter.Helpers.Game.PlayTime":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "PlayTime", "Int32");
                xamlMember.Getter = get_43_Game_PlayTime;
                xamlMember.Setter = set_43_Game_PlayTime;
                break;
            case "GameCenter.Helpers.Game.Platform":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Platform", "GameCenter.Helpers.GamePlatform");
                xamlMember.Getter = get_44_Game_Platform;
                xamlMember.Setter = set_44_Game_Platform;
                break;
            case "GameCenter.Helpers.Game.ImageSource":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ImageSource", "Microsoft.UI.Xaml.Media.Imaging.BitmapImage");
                xamlMember.Getter = get_45_Game_ImageSource;
                xamlMember.Setter = set_45_Game_ImageSource;
                break;
            case "GameCenter.Helpers.Game.ScreenshotSources":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ScreenshotSources", "System.Collections.Generic.List`1<Microsoft.UI.Xaml.Media.Imaging.BitmapImage>");
                xamlMember.Getter = get_46_Game_ScreenshotSources;
                xamlMember.Setter = set_46_Game_ScreenshotSources;
                break;
            case "GameCenter.Helpers.Game.AvailableDLC":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Game");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "AvailableDLC", "System.Collections.ObjectModel.ObservableCollection`1<GameCenter.Helpers.DLC>");
                xamlMember.Getter = get_47_Game_AvailableDLC;
                xamlMember.Setter = set_47_Game_AvailableDLC;
                break;
            case "GameCenter.Helpers.DLC.Id":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.DLC");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Id", "Int32");
                xamlMember.Getter = get_48_DLC_Id;
                xamlMember.Setter = set_48_DLC_Id;
                break;
            case "GameCenter.Helpers.DLC.GameId":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.DLC");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "GameId", "Int32");
                xamlMember.Getter = get_49_DLC_GameId;
                xamlMember.Setter = set_49_DLC_GameId;
                break;
            case "GameCenter.Helpers.DLC.Title":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.DLC");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_50_DLC_Title;
                xamlMember.Setter = set_50_DLC_Title;
                break;
            case "GameCenter.Helpers.DLC.ImageUrl":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.DLC");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ImageUrl", "String");
                xamlMember.Getter = get_51_DLC_ImageUrl;
                xamlMember.Setter = set_51_DLC_ImageUrl;
                break;
            case "GameCenter.Helpers.DLC.Price":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.DLC");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Price", "String");
                xamlMember.Getter = get_52_DLC_Price;
                xamlMember.Setter = set_52_DLC_Price;
                break;
            case "GameCenter.GamePage.XboxGames":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.GamePage");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "XboxGames", "System.Collections.ObjectModel.ObservableCollection`1<GameCenter.Helpers.Game>");
                xamlMember.Getter = get_53_GamePage_XboxGames;
                xamlMember.SetIsReadOnly();
                break;
            case "GameCenter.GamePage.EpicGames":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.GamePage");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "EpicGames", "System.Collections.ObjectModel.ObservableCollection`1<GameCenter.Helpers.Game>");
                xamlMember.Getter = get_54_GamePage_EpicGames;
                xamlMember.SetIsReadOnly();
                break;
            case "GameCenter.GamePage.OtherGames":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.GamePage");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "OtherGames", "System.Collections.ObjectModel.ObservableCollection`1<GameCenter.Helpers.Game>");
                xamlMember.Getter = get_55_GamePage_OtherGames;
                xamlMember.SetIsReadOnly();
                break;
            case "GameCenter.GamePage.CustomPaths":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.GamePage");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "CustomPaths", "System.Collections.ObjectModel.ObservableCollection`1<GameCenter.Helpers.Models.GamePath>");
                xamlMember.Getter = get_56_GamePage_CustomPaths;
                xamlMember.SetIsReadOnly();
                break;
            case "GameCenter.Helpers.Models.GamePath.Id":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Models.GamePath");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Id", "String");
                xamlMember.Getter = get_57_GamePath_Id;
                xamlMember.Setter = set_57_GamePath_Id;
                break;
            case "GameCenter.Helpers.Models.GamePath.Path":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Models.GamePath");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Path", "String");
                xamlMember.Getter = get_58_GamePath_Path;
                xamlMember.Setter = set_58_GamePath_Path;
                break;
            case "GameCenter.Helpers.Models.GamePath.Name":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Models.GamePath");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_59_GamePath_Name;
                xamlMember.Setter = set_59_GamePath_Name;
                break;
            case "GameCenter.Helpers.Models.GamePath.LauncherType":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Models.GamePath");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "LauncherType", "String");
                xamlMember.Getter = get_60_GamePath_LauncherType;
                xamlMember.Setter = set_60_GamePath_LauncherType;
                break;
            case "GameCenter.Helpers.Models.GamePath.DateAdded":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Models.GamePath");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "DateAdded", "System.DateTime");
                xamlMember.Getter = get_61_GamePath_DateAdded;
                xamlMember.Setter = set_61_GamePath_DateAdded;
                break;
            case "GameCenter.Helpers.Models.GamePath.IsActive":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Models.GamePath");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IsActive", "Boolean");
                xamlMember.Getter = get_62_GamePath_IsActive;
                xamlMember.Setter = set_62_GamePath_IsActive;
                break;
            case "Microsoft.UI.Xaml.Media.MicaBackdrop.Kind":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Media.MicaBackdrop");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Kind", "Microsoft.UI.Composition.SystemBackdrops.MicaKind");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_63_MicaBackdrop_Kind;
                xamlMember.Setter = set_63_MicaBackdrop_Kind;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneDisplayMode":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "PaneDisplayMode", "Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_64_NavigationView_PaneDisplayMode;
                xamlMember.Setter = set_64_NavigationView_PaneDisplayMode;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsSettingsVisible":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IsSettingsVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_65_NavigationView_IsSettingsVisible;
                xamlMember.Setter = set_65_NavigationView_IsSettingsVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsBackButtonVisible":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IsBackButtonVisible", "Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_NavigationView_IsBackButtonVisible;
                xamlMember.Setter = set_66_NavigationView_IsBackButtonVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.OpenPaneLength":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "OpenPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_67_NavigationView_OpenPaneLength;
                xamlMember.Setter = set_67_NavigationView_OpenPaneLength;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.CompactPaneLength":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "CompactPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_68_NavigationView_CompactPaneLength;
                xamlMember.Setter = set_68_NavigationView_CompactPaneLength;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneToggleButtonVisible":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IsPaneToggleButtonVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_69_NavigationView_IsPaneToggleButtonVisible;
                xamlMember.Setter = set_69_NavigationView_IsPaneToggleButtonVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItems":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "MenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_70_NavigationView_MenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneFooter":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "PaneFooter", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_71_NavigationView_PaneFooter;
                xamlMember.Setter = set_71_NavigationView_PaneFooter;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.AlwaysShowHeader":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "AlwaysShowHeader", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_72_NavigationView_AlwaysShowHeader;
                xamlMember.Setter = set_72_NavigationView_AlwaysShowHeader;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.AutoSuggestBox":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "AutoSuggestBox", "Microsoft.UI.Xaml.Controls.AutoSuggestBox");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_73_NavigationView_AutoSuggestBox;
                xamlMember.Setter = set_73_NavigationView_AutoSuggestBox;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.CompactModeThresholdWidth":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "CompactModeThresholdWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_74_NavigationView_CompactModeThresholdWidth;
                xamlMember.Setter = set_74_NavigationView_CompactModeThresholdWidth;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ContentOverlay":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ContentOverlay", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_75_NavigationView_ContentOverlay;
                xamlMember.Setter = set_75_NavigationView_ContentOverlay;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.DisplayMode":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "DisplayMode", "Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_76_NavigationView_DisplayMode;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ExpandedModeThresholdWidth":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ExpandedModeThresholdWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_77_NavigationView_ExpandedModeThresholdWidth;
                xamlMember.Setter = set_77_NavigationView_ExpandedModeThresholdWidth;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.FooterMenuItems":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "FooterMenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_78_NavigationView_FooterMenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.FooterMenuItemsSource":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "FooterMenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_79_NavigationView_FooterMenuItemsSource;
                xamlMember.Setter = set_79_NavigationView_FooterMenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.Header":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_80_NavigationView_Header;
                xamlMember.Setter = set_80_NavigationView_Header;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.HeaderTemplate":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_81_NavigationView_HeaderTemplate;
                xamlMember.Setter = set_81_NavigationView_HeaderTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsBackEnabled":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IsBackEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_82_NavigationView_IsBackEnabled;
                xamlMember.Setter = set_82_NavigationView_IsBackEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneOpen":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IsPaneOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_83_NavigationView_IsPaneOpen;
                xamlMember.Setter = set_83_NavigationView_IsPaneOpen;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneVisible":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IsPaneVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_NavigationView_IsPaneVisible;
                xamlMember.Setter = set_84_NavigationView_IsPaneVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsTitleBarAutoPaddingEnabled":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IsTitleBarAutoPaddingEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_85_NavigationView_IsTitleBarAutoPaddingEnabled;
                xamlMember.Setter = set_85_NavigationView_IsTitleBarAutoPaddingEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyle":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "MenuItemContainerStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_86_NavigationView_MenuItemContainerStyle;
                xamlMember.Setter = set_86_NavigationView_MenuItemContainerStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyleSelector":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "MenuItemContainerStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_87_NavigationView_MenuItemContainerStyleSelector;
                xamlMember.Setter = set_87_NavigationView_MenuItemContainerStyleSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplate":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "MenuItemTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_88_NavigationView_MenuItemTemplate;
                xamlMember.Setter = set_88_NavigationView_MenuItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplateSelector":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "MenuItemTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_89_NavigationView_MenuItemTemplateSelector;
                xamlMember.Setter = set_89_NavigationView_MenuItemTemplateSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemsSource":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "MenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_90_NavigationView_MenuItemsSource;
                xamlMember.Setter = set_90_NavigationView_MenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.OverflowLabelMode":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "OverflowLabelMode", "Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_91_NavigationView_OverflowLabelMode;
                xamlMember.Setter = set_91_NavigationView_OverflowLabelMode;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneCustomContent":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "PaneCustomContent", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_92_NavigationView_PaneCustomContent;
                xamlMember.Setter = set_92_NavigationView_PaneCustomContent;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneHeader":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "PaneHeader", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_93_NavigationView_PaneHeader;
                xamlMember.Setter = set_93_NavigationView_PaneHeader;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneTitle":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "PaneTitle", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_94_NavigationView_PaneTitle;
                xamlMember.Setter = set_94_NavigationView_PaneTitle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneToggleButtonStyle":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "PaneToggleButtonStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_95_NavigationView_PaneToggleButtonStyle;
                xamlMember.Setter = set_95_NavigationView_PaneToggleButtonStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SelectedItem":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_96_NavigationView_SelectedItem;
                xamlMember.Setter = set_96_NavigationView_SelectedItem;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SelectionFollowsFocus":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "SelectionFollowsFocus", "Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_97_NavigationView_SelectionFollowsFocus;
                xamlMember.Setter = set_97_NavigationView_SelectionFollowsFocus;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SettingsItem":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "SettingsItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_98_NavigationView_SettingsItem;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ShoulderNavigationEnabled":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ShoulderNavigationEnabled", "Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_99_NavigationView_ShoulderNavigationEnabled;
                xamlMember.Setter = set_99_NavigationView_ShoulderNavigationEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.TemplateSettings":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_100_NavigationView_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItemBase.IsSelected":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItemBase");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_101_NavigationViewItemBase_IsSelected;
                xamlMember.Setter = set_101_NavigationViewItemBase_IsSelected;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.Icon":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Icon", "Microsoft.UI.Xaml.Controls.IconElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_102_NavigationViewItem_Icon;
                xamlMember.Setter = set_102_NavigationViewItem_Icon;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.CompactPaneLength":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "CompactPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_103_NavigationViewItem_CompactPaneLength;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.HasUnrealizedChildren":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_104_NavigationViewItem_HasUnrealizedChildren;
                xamlMember.Setter = set_104_NavigationViewItem_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.InfoBadge":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "InfoBadge", "Microsoft.UI.Xaml.Controls.InfoBadge");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_105_NavigationViewItem_InfoBadge;
                xamlMember.Setter = set_105_NavigationViewItem_InfoBadge;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.IsChildSelected":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IsChildSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_106_NavigationViewItem_IsChildSelected;
                xamlMember.Setter = set_106_NavigationViewItem_IsChildSelected;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.IsExpanded":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_107_NavigationViewItem_IsExpanded;
                xamlMember.Setter = set_107_NavigationViewItem_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.MenuItems":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "MenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_108_NavigationViewItem_MenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.MenuItemsSource":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "MenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_109_NavigationViewItem_MenuItemsSource;
                xamlMember.Setter = set_109_NavigationViewItem_MenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.SelectsOnInvoked":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "SelectsOnInvoked", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_110_NavigationViewItem_SelectsOnInvoked;
                xamlMember.Setter = set_110_NavigationViewItem_SelectsOnInvoked;
                break;
            case "Microsoft.UI.Xaml.Controls.PersonPicture.ProfilePicture":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.PersonPicture");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ProfilePicture", "Microsoft.UI.Xaml.Media.ImageSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_111_PersonPicture_ProfilePicture;
                xamlMember.Setter = set_111_PersonPicture_ProfilePicture;
                break;
            case "Microsoft.UI.Xaml.Controls.PersonPicture.BadgeGlyph":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.PersonPicture");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "BadgeGlyph", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_112_PersonPicture_BadgeGlyph;
                xamlMember.Setter = set_112_PersonPicture_BadgeGlyph;
                break;
            case "Microsoft.UI.Xaml.Controls.PersonPicture.BadgeImageSource":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.PersonPicture");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "BadgeImageSource", "Microsoft.UI.Xaml.Media.ImageSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_113_PersonPicture_BadgeImageSource;
                xamlMember.Setter = set_113_PersonPicture_BadgeImageSource;
                break;
            case "Microsoft.UI.Xaml.Controls.PersonPicture.BadgeNumber":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.PersonPicture");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "BadgeNumber", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_114_PersonPicture_BadgeNumber;
                xamlMember.Setter = set_114_PersonPicture_BadgeNumber;
                break;
            case "Microsoft.UI.Xaml.Controls.PersonPicture.BadgeText":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.PersonPicture");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "BadgeText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_115_PersonPicture_BadgeText;
                xamlMember.Setter = set_115_PersonPicture_BadgeText;
                break;
            case "Microsoft.UI.Xaml.Controls.PersonPicture.Contact":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.PersonPicture");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Contact", "Windows.ApplicationModel.Contacts.Contact");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_116_PersonPicture_Contact;
                xamlMember.Setter = set_116_PersonPicture_Contact;
                break;
            case "Microsoft.UI.Xaml.Controls.PersonPicture.DisplayName":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.PersonPicture");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "DisplayName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_117_PersonPicture_DisplayName;
                xamlMember.Setter = set_117_PersonPicture_DisplayName;
                break;
            case "Microsoft.UI.Xaml.Controls.PersonPicture.Initials":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.PersonPicture");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Initials", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_118_PersonPicture_Initials;
                xamlMember.Setter = set_118_PersonPicture_Initials;
                break;
            case "Microsoft.UI.Xaml.Controls.PersonPicture.IsGroup":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.PersonPicture");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IsGroup", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_119_PersonPicture_IsGroup;
                xamlMember.Setter = set_119_PersonPicture_IsGroup;
                break;
            case "Microsoft.UI.Xaml.Controls.PersonPicture.PreferSmallImage":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.PersonPicture");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "PreferSmallImage", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_120_PersonPicture_PreferSmallImage;
                xamlMember.Setter = set_120_PersonPicture_PreferSmallImage;
                break;
            case "Microsoft.UI.Xaml.Controls.PersonPicture.TemplateSettings":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.PersonPicture");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.PersonPictureTemplateSettings");
                xamlMember.Getter = get_121_PersonPicture_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "GameCenter.MainWindow.CurrentTime":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.MainWindow");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "CurrentTime", "String");
                xamlMember.Getter = get_122_MainWindow_CurrentTime;
                xamlMember.Setter = set_122_MainWindow_CurrentTime;
                break;
            case "GameCenter.MainWindow.RecommendedGames":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.MainWindow");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "RecommendedGames", "System.Collections.ObjectModel.ObservableCollection`1<GameCenter.Helpers.Game>");
                xamlMember.Getter = get_123_MainWindow_RecommendedGames;
                xamlMember.SetIsReadOnly();
                break;
            case "GameCenter.MainWindow.ExploreGames":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.MainWindow");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ExploreGames", "System.Collections.ObjectModel.ObservableCollection`1<GameCenter.Helpers.Game>");
                xamlMember.Getter = get_124_MainWindow_ExploreGames;
                xamlMember.SetIsReadOnly();
                break;
            case "GameCenter.Pages.Friends.Friendes":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Pages.Friends");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Friendes", "System.Collections.ObjectModel.ObservableCollection`1<GameCenter.Helpers.Friend>");
                xamlMember.Getter = get_125_Friends_Friendes;
                xamlMember.SetIsReadOnly();
                break;
            case "GameCenter.Helpers.Friend.Name":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Friend");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_126_Friend_Name;
                xamlMember.Setter = set_126_Friend_Name;
                break;
            case "GameCenter.Helpers.Friend.Status":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Friend");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Status", "String");
                xamlMember.Getter = get_127_Friend_Status;
                xamlMember.Setter = set_127_Friend_Status;
                break;
            case "GameCenter.Helpers.Friend.StatusColor":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Friend");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "StatusColor", "Microsoft.UI.Xaml.Media.SolidColorBrush");
                xamlMember.Getter = get_128_Friend_StatusColor;
                xamlMember.Setter = set_128_Friend_StatusColor;
                break;
            case "GameCenter.Helpers.Friend.ProfilePicture":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Friend");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ProfilePicture", "String");
                xamlMember.Getter = get_129_Friend_ProfilePicture;
                xamlMember.Setter = set_129_Friend_ProfilePicture;
                break;
            case "GameCenter.Helpers.Friend.Platform":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Friend");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Platform", "String");
                xamlMember.Getter = get_130_Friend_Platform;
                xamlMember.Setter = set_130_Friend_Platform;
                break;
            case "GameCenter.Helpers.Friend.PlatformIcon":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Helpers.Friend");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "PlatformIcon", "String");
                xamlMember.Getter = get_131_Friend_PlatformIcon;
                xamlMember.Setter = set_131_Friend_PlatformIcon;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemTemplate":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_132_ItemsRepeater_ItemTemplate;
                xamlMember.Setter = set_132_ItemsRepeater_ItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemsSource":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_133_ItemsRepeater_ItemsSource;
                xamlMember.Setter = set_133_ItemsRepeater_ItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.Layout":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Layout", "Microsoft.UI.Xaml.Controls.Layout");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_134_ItemsRepeater_Layout;
                xamlMember.Setter = set_134_ItemsRepeater_Layout;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.Background":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Background", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_135_ItemsRepeater_Background;
                xamlMember.Setter = set_135_ItemsRepeater_Background;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.HorizontalCacheLength":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "HorizontalCacheLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_136_ItemsRepeater_HorizontalCacheLength;
                xamlMember.Setter = set_136_ItemsRepeater_HorizontalCacheLength;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemTransitionProvider":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ItemTransitionProvider", "Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_137_ItemsRepeater_ItemTransitionProvider;
                xamlMember.Setter = set_137_ItemsRepeater_ItemTransitionProvider;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemsSourceView":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ItemsSourceView", "Microsoft.UI.Xaml.Controls.ItemsSourceView");
                xamlMember.Getter = get_138_ItemsRepeater_ItemsSourceView;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.VerticalCacheLength":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "VerticalCacheLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_139_ItemsRepeater_VerticalCacheLength;
                xamlMember.Setter = set_139_ItemsRepeater_VerticalCacheLength;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.IsIndeterminate":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IsIndeterminate", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_140_ProgressBar_IsIndeterminate;
                xamlMember.Setter = set_140_ProgressBar_IsIndeterminate;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.ShowError":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ShowError", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_141_ProgressBar_ShowError;
                xamlMember.Setter = set_141_ProgressBar_ShowError;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.ShowPaused":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ShowPaused", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_142_ProgressBar_ShowPaused;
                xamlMember.Setter = set_142_ProgressBar_ShowPaused;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.TemplateSettings":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings");
                xamlMember.Getter = get_143_ProgressBar_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "GameCenter.Pages.LauncherInfo.Name":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Pages.LauncherInfo");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_144_LauncherInfo_Name;
                xamlMember.Setter = set_144_LauncherInfo_Name;
                break;
            case "GameCenter.Pages.LauncherInfo.IconPath":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Pages.LauncherInfo");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IconPath", "String");
                xamlMember.Getter = get_145_LauncherInfo_IconPath;
                xamlMember.Setter = set_145_LauncherInfo_IconPath;
                break;
            case "GameCenter.Pages.LauncherInfo.DownloadUrl":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Pages.LauncherInfo");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "DownloadUrl", "String");
                xamlMember.Getter = get_146_LauncherInfo_DownloadUrl;
                xamlMember.Setter = set_146_LauncherInfo_DownloadUrl;
                break;
            case "GameCenter.Pages.LauncherInfo.InstallPath":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Pages.LauncherInfo");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "InstallPath", "String");
                xamlMember.Getter = get_147_LauncherInfo_InstallPath;
                xamlMember.Setter = set_147_LauncherInfo_InstallPath;
                break;
            case "GameCenter.Pages.LauncherInfo.UbisoftInstallType":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Pages.LauncherInfo");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "UbisoftInstallType", "String");
                xamlMember.Getter = get_148_LauncherInfo_UbisoftInstallType;
                xamlMember.Setter = set_148_LauncherInfo_UbisoftInstallType;
                break;
            case "GameCenter.Pages.LauncherInfo.InstallerType":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Pages.LauncherInfo");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "InstallerType", "String");
                xamlMember.Getter = get_149_LauncherInfo_InstallerType;
                xamlMember.Setter = set_149_LauncherInfo_InstallerType;
                break;
            case "GameCenter.Pages.LauncherInfo.IsInstalled":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Pages.LauncherInfo");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IsInstalled", "Boolean");
                xamlMember.Getter = get_150_LauncherInfo_IsInstalled;
                xamlMember.Setter = set_150_LauncherInfo_IsInstalled;
                break;
            case "GameCenter.Pages.LauncherInfo.Progress":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Pages.LauncherInfo");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Progress", "Int32");
                xamlMember.Getter = get_151_LauncherInfo_Progress;
                xamlMember.Setter = set_151_LauncherInfo_Progress;
                break;
            case "GameCenter.Pages.LauncherInfo.ProgressVisibility":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Pages.LauncherInfo");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ProgressVisibility", "Microsoft.UI.Xaml.Visibility");
                xamlMember.Getter = get_152_LauncherInfo_ProgressVisibility;
                xamlMember.SetIsReadOnly();
                break;
            case "GameCenter.Pages.LauncherInfo.ActionButtonText":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Pages.LauncherInfo");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ActionButtonText", "String");
                xamlMember.Getter = get_153_LauncherInfo_ActionButtonText;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.UniformGridLayout.MinItemWidth":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UniformGridLayout");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "MinItemWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_154_UniformGridLayout_MinItemWidth;
                xamlMember.Setter = set_154_UniformGridLayout_MinItemWidth;
                break;
            case "Microsoft.UI.Xaml.Controls.UniformGridLayout.MinItemHeight":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UniformGridLayout");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "MinItemHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_155_UniformGridLayout_MinItemHeight;
                xamlMember.Setter = set_155_UniformGridLayout_MinItemHeight;
                break;
            case "Microsoft.UI.Xaml.Controls.UniformGridLayout.ItemsStretch":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UniformGridLayout");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ItemsStretch", "Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_156_UniformGridLayout_ItemsStretch;
                xamlMember.Setter = set_156_UniformGridLayout_ItemsStretch;
                break;
            case "Microsoft.UI.Xaml.Controls.UniformGridLayout.ItemsJustification":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UniformGridLayout");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ItemsJustification", "Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_157_UniformGridLayout_ItemsJustification;
                xamlMember.Setter = set_157_UniformGridLayout_ItemsJustification;
                break;
            case "Microsoft.UI.Xaml.Controls.UniformGridLayout.MaximumRowsOrColumns":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UniformGridLayout");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "MaximumRowsOrColumns", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_158_UniformGridLayout_MaximumRowsOrColumns;
                xamlMember.Setter = set_158_UniformGridLayout_MaximumRowsOrColumns;
                break;
            case "Microsoft.UI.Xaml.Controls.UniformGridLayout.MinColumnSpacing":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UniformGridLayout");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "MinColumnSpacing", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_159_UniformGridLayout_MinColumnSpacing;
                xamlMember.Setter = set_159_UniformGridLayout_MinColumnSpacing;
                break;
            case "Microsoft.UI.Xaml.Controls.UniformGridLayout.MinRowSpacing":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UniformGridLayout");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "MinRowSpacing", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_160_UniformGridLayout_MinRowSpacing;
                xamlMember.Setter = set_160_UniformGridLayout_MinRowSpacing;
                break;
            case "Microsoft.UI.Xaml.Controls.UniformGridLayout.Orientation":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UniformGridLayout");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Orientation", "Microsoft.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_161_UniformGridLayout_Orientation;
                xamlMember.Setter = set_161_UniformGridLayout_Orientation;
                break;
            case "Microsoft.UI.Xaml.Controls.Layout.IndexBasedLayoutOrientation":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Layout");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IndexBasedLayoutOrientation", "Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation");
                xamlMember.Getter = get_162_Layout_IndexBasedLayoutOrientation;
                xamlMember.SetIsReadOnly();
                break;
            case "GameCenter.Pages.PlatformInstaller.Launchers":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameCenter.Pages.PlatformInstaller");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Launchers", "System.Collections.ObjectModel.ObservableCollection`1<GameCenter.Pages.LauncherInfo>");
                xamlMember.Getter = get_163_PlatformInstaller_Launchers;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.Header":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_164_Expander_Header;
                xamlMember.Setter = set_164_Expander_Header;
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.IsExpanded":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_165_Expander_IsExpanded;
                xamlMember.Setter = set_165_Expander_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.ExpandDirection":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "ExpandDirection", "Microsoft.UI.Xaml.Controls.ExpandDirection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_166_Expander_ExpandDirection;
                xamlMember.Setter = set_166_Expander_ExpandDirection;
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.HeaderTemplate":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_167_Expander_HeaderTemplate;
                xamlMember.Setter = set_167_Expander_HeaderTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.HeaderTemplateSelector":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "HeaderTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_168_Expander_HeaderTemplateSelector;
                xamlMember.Setter = set_168_Expander_HeaderTemplateSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.TemplateSettings":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings");
                xamlMember.Getter = get_169_Expander_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Children":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Children", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>");
                xamlMember.Getter = get_170_TreeViewNode_Children;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Content":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_171_TreeViewNode_Content;
                xamlMember.Setter = set_171_TreeViewNode_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Depth":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Depth", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_172_TreeViewNode_Depth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasChildren":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "HasChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_173_TreeViewNode_HasChildren;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasUnrealizedChildren":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.Getter = get_174_TreeViewNode_HasUnrealizedChildren;
                xamlMember.Setter = set_174_TreeViewNode_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.IsExpanded":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_175_TreeViewNode_IsExpanded;
                xamlMember.Setter = set_175_TreeViewNode_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Parent":
                userType = (global::GameCenter.GameCenter_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::GameCenter.GameCenter_XamlTypeInfo.XamlMember(this, "Parent", "Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember.Getter = get_176_TreeViewNode_Parent;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2502")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlSystemBaseType : global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, 
            global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void StaticInitializer();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);
    internal delegate object BoxInstanceMethod(object instance);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2502")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlUserType : global::GameCenter.GameCenter_XamlTypeInfo.XamlSystemBaseType
        , global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        global::GameCenter.GameCenter_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Microsoft.UI.Xaml.Markup.IXamlType _baseType;
        global::Microsoft.UI.Xaml.Markup.IXamlType _boxedType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::GameCenter.GameCenter_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, 
            global::System.Type fullType, global::Microsoft.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }
        override public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { return _boxedType; } }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            StaticInitializer();
        }

        override public object CreateFromString(string input)
        {
            if (BoxedType != null)
            {
                return BoxInstance(BoxedType.CreateFromString(input));
            }

            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                long value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    long enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt64(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return global::System.Convert.ChangeType(value, global::System.Enum.GetUnderlyingType(this.UnderlyingType));
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public StaticInitializer StaticInitializer { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }
        public BoxInstanceMethod BoxInstance {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void SetBoxedType(global::Microsoft.UI.Xaml.Markup.IXamlType boxedType)
        {
            _boxedType = boxedType;
        }

        public object BoxType<T>(object instance) where T: struct
        {
            T unwrapped = (T)instance;
            return new global::System.Nullable<T>(unwrapped);
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2502")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlMember : global::Microsoft.UI.Xaml.Markup.IXamlMember
    {
        global::GameCenter.GameCenter_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::GameCenter.GameCenter_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Microsoft.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Microsoft.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

